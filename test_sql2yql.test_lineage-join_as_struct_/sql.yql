(
(import aggregate_module '"/lib/yql/aggregate.yql")
(import window_module '"/lib/yql/window.yql")
(import core_module '"/lib/yql/core.yql")
(let world (block '(
  (let x (Read! world (DataSource '"yt" '"plato") (MrTableConcat (Key '('table (String '"Input")))) (Void) '()))
  (let table1 (Right! x))
  (let x (Read! world (DataSource '"yt" '"plato") (MrTableConcat (Key '('table (String '"Input")))) (Void) '()))
  (let table2 (Right! x))
  (let values (block '(
    (let select (block '(
      (let core (block '(
        (let select (block '(
          (let core (EquiJoin '((RemoveSystemMembers (block '(
            (let select (block '(
              (let core table1)
              (let core (PersistableRepr (block '(
                (let projectCoreType (TypeOf core))
                (let core (OrderedSqlProject core '((SqlProjectItem projectCoreType '"key" (lambda '(row) (block '(
                  (let res (Member row '"key"))
                  (return res)
                )))) (SqlProjectItem projectCoreType '"x" (lambda '(row) (block '(
                  (let res (AsStructUnordered '('"a" (Member row '"key")) '('"b" (Member row '"value"))))
                  (return res)
                )))))))
                (return core)
              ))))
              (return core)
            )))
            (return select)
          ))) '"a") '((RemoveSystemMembers (block '(
            (let select (block '(
              (let core table2)
              (let core (PersistableRepr (block '(
                (let projectCoreType (TypeOf core))
                (let core (OrderedSqlProject core '((SqlProjectItem projectCoreType '"key" (lambda '(row) (block '(
                  (let res (Member row '"key"))
                  (return res)
                )))) (SqlProjectItem projectCoreType '"y" (lambda '(row) (block '(
                  (let res (AsStructUnordered '('"c" (Member row '"key")) '('"d" (Member row '"value"))))
                  (return res)
                )))))))
                (return core)
              ))))
              (return core)
            )))
            (return select)
          ))) '"b") '('Inner '"a" '"b" '('"a" '"key") '('"b" '"key") '()) '()))
          (let core (PersistableRepr (block '(
            (let projectCoreType (TypeOf core))
            (let core (OrderedSqlProject core '((SqlProjectItem projectCoreType '"x" (lambda '(row) (block '(
              (let res (SqlColumn row '"x"))
              (return res)
            )))) (SqlProjectItem projectCoreType '"y" (lambda '(row) (block '(
              (let res (SqlColumn row '"y"))
              (return res)
            )))))))
            (return core)
          ))))
          (return core)
        )))
        (return select)
      )))
      (let core (OrderedFlatMap core (lambda '(row) (block '(
        (let res (Just (FlattenStructs row)))
        (return res)
      )))))
      (let core (PersistableRepr (block '(
        (let projectCoreType (TypeOf core))
        (let core (OrderedSqlProject core '((SqlProjectStarItem projectCoreType '"" (lambda '(row) (block '(
          (let res row)
          (return res)
        ))) '()))))
        (return core)
      ))))
      (return core)
    )))
    (let select (RemoveSystemMembers select))
    (return select)
  )))
  (let values (Unordered values))
  (let world (block '(
    (let sink (DataSink '"yt" '"plato"))
    (let world (Write! world sink (Key '('table (String '"Output"))) values '('('mode 'append))))
    (return world)
  )))
  (return world)
)))
(let world (block '(
  (let world (CommitAll! world))
  (return world)
)))
(return world)
)
