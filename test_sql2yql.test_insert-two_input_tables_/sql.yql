(
(import aggregate_module '"/lib/yql/aggregate.yql")
(import window_module '"/lib/yql/window.yql")
(import core_module '"/lib/yql/core.yql")
(let world (block '(
  (let x (Read! world (DataSource '"yt" '"plato") (MrTableConcat (Key '('table (String '"Input")))) (Void) '()))
  (let table1 (Right! x))
  (let values (AssumeColumnOrder (OrderedMap (block '(
    (let select (block '(
      (let core table1)
      (let core (PersistableRepr (block '(
        (let projectCoreType (TypeOf core))
        (let core (OrderedSqlProject core '((SqlProjectItem projectCoreType '"key" (lambda '(row) (block '(
          (let res (Member row '"key"))
          (return res)
        )))) (SqlProjectItem projectCoreType '"subkey" (lambda '(row) (block '(
          (let res (Member row '"subkey"))
          (return res)
        )))) (SqlProjectItem projectCoreType '"value" (lambda '(row) (block '(
          (let res (Member row '"value"))
          (return res)
        )))))))
        (return core)
      ))))
      (return core)
    )))
    (return select)
  )) (lambda '(row) (AsStruct '('"key" (Member row '"key")) '('"subkey" (Member row '"subkey")) '('"value" (Member row '"value"))))) '('"key" '"subkey" '"value")))
  (let values (Unordered values))
  (let world (block '(
    (let sink (DataSink '"yt" '"plato"))
    (let world (Write! world sink (Key '('table (String '"Output"))) values '('('mode 'append))))
    (return world)
  )))
  (return world)
)))
(let world (block '(
  (let x (Read! world (DataSource '"yt" '"plato") (MrTableConcat (Key '('table (String '"Input2")))) (Void) '()))
  (let table3 (Right! x))
  (let values (AssumeColumnOrder (OrderedMap (block '(
    (let select (block '(
      (let core table3)
      (let core (PersistableRepr (block '(
        (let projectCoreType (TypeOf core))
        (let core (OrderedSqlProject core '((SqlProjectItem projectCoreType '"key" (lambda '(row) (block '(
          (let res (Member row '"key"))
          (return res)
        )))) (SqlProjectItem projectCoreType '"subkey" (lambda '(row) (block '(
          (let res (Member row '"subkey"))
          (return res)
        )))) (SqlProjectItem projectCoreType '"value" (lambda '(row) (block '(
          (let res (Member row '"value"))
          (return res)
        )))))))
        (return core)
      ))))
      (return core)
    )))
    (return select)
  )) (lambda '(row) (AsStruct '('"key" (Member row '"key")) '('"subkey" (Member row '"subkey")) '('"value" (Member row '"value"))))) '('"key" '"subkey" '"value")))
  (let values (Unordered values))
  (let world (block '(
    (let sink (DataSink '"yt" '"plato"))
    (let world (Write! world sink (Key '('table (String '"Output"))) values '('('mode 'append))))
    (return world)
  )))
  (return world)
)))
(let world (block '(
  (let world (CommitAll! world))
  (return world)
)))
(return world)
)
