(
(let world (Configure! world (DataSource 'config) 'OrderedColumns))
(let output (PgSelect '('('set_items '((PgSetItem '('('result '((PgResultItem '"x" (Void) (lambda '() (PgColumnRef '"x"))) (PgResultItem '"upp" (Void) (lambda '() (PgAggWindowCall '"sum" (PgAnonWindow '0) '() (PgColumnRef '"x")))) (PgResultItem '"upc" (Void) (lambda '() (PgAggWindowCall '"sum" (PgAnonWindow '1) '() (PgColumnRef '"x")))) (PgResultItem '"upf" (Void) (lambda '() (PgAggWindowCall '"sum" (PgAnonWindow '2) '() (PgColumnRef '"x")))) (PgResultItem '"upuf" (Void) (lambda '() (PgAggWindowCall '"sum" (PgAnonWindow '3) '() (PgColumnRef '"x")))) (PgResultItem '"pp" (Void) (lambda '() (PgAggWindowCall '"sum" (PgAnonWindow '4) '() (PgColumnRef '"x")))) (PgResultItem '"pc" (Void) (lambda '() (PgAggWindowCall '"sum" (PgAnonWindow '5) '() (PgColumnRef '"x")))) (PgResultItem '"pf" (Void) (lambda '() (PgAggWindowCall '"sum" (PgAnonWindow '6) '() (PgColumnRef '"x")))) (PgResultItem '"puf" (Void) (lambda '() (PgAggWindowCall '"sum" (PgAnonWindow '7) '() (PgColumnRef '"x")))) (PgResultItem '"cc" (Void) (lambda '() (PgAggWindowCall '"sum" (PgAnonWindow '8) '() (PgColumnRef '"x")))) (PgResultItem '"cf" (Void) (lambda '() (PgAggWindowCall '"sum" (PgAnonWindow '9) '() (PgColumnRef '"x")))) (PgResultItem '"cuf" (Void) (lambda '() (PgAggWindowCall '"sum" (PgAnonWindow '10) '() (PgColumnRef '"x")))) (PgResultItem '"ff" (Void) (lambda '() (PgAggWindowCall '"sum" (PgAnonWindow '11) '() (PgColumnRef '"x")))) (PgResultItem '"fuf" (Void) (lambda '() (PgAggWindowCall '"sum" (PgAnonWindow '12) '() (PgColumnRef '"x")))))) '('from '('((PgSelect '('('set_items '((PgSetItem '('('values '('column0) (AsList '((PgConst '1 (PgType 'int4))) '((PgConst '2 (PgType 'int4))) '((PgConst '3 (PgType 'int4))) '((PgConst '4 (PgType 'int4))) '((PgConst '5 (PgType 'int4))) '((PgConst '6 (PgType 'int4))) '((PgConst '7 (PgType 'int4))))))))) '('set_ops '('push)))) '"a" '('"x")))) '('join_ops '('())) '('window '((PgWindow '"" '"" '() '((PgSort (Void) (lambda '() (PgColumnRef '"x")) 'asc)) '('('to_value (Int32 '1)) '('type '"rows") '('from '"up") '('to '"p"))) (PgWindow '"" '"" '() '((PgSort (Void) (lambda '() (PgColumnRef '"x")) 'asc)) '('('type '"rows") '('from '"up") '('to '"c"))) (PgWindow '"" '"" '() '((PgSort (Void) (lambda '() (PgColumnRef '"x")) 'asc)) '('('to_value (Int32 '1)) '('type '"rows") '('from '"up") '('to '"f"))) (PgWindow '"" '"" '() '((PgSort (Void) (lambda '() (PgColumnRef '"x")) 'asc)) '('('type '"rows") '('from '"up") '('to '"uf"))) (PgWindow '"" '"" '() '((PgSort (Void) (lambda '() (PgColumnRef '"x")) 'asc)) '('('from_value (Int32 '2)) '('to_value (Int32 '1)) '('type '"rows") '('from '"p") '('to '"p"))) (PgWindow '"" '"" '() '((PgSort (Void) (lambda '() (PgColumnRef '"x")) 'asc)) '('('from_value (Int32 '2)) '('type '"rows") '('from '"p") '('to '"c"))) (PgWindow '"" '"" '() '((PgSort (Void) (lambda '() (PgColumnRef '"x")) 'asc)) '('('from_value (Int32 '2)) '('to_value (Int32 '1)) '('type '"rows") '('from '"p") '('to '"f"))) (PgWindow '"" '"" '() '((PgSort (Void) (lambda '() (PgColumnRef '"x")) 'asc)) '('('from_value (Int32 '2)) '('type '"rows") '('from '"p") '('to '"uf"))) (PgWindow '"" '"" '() '((PgSort (Void) (lambda '() (PgColumnRef '"x")) 'asc)) '('('type '"rows") '('from '"c") '('to '"c"))) (PgWindow '"" '"" '() '((PgSort (Void) (lambda '() (PgColumnRef '"x")) 'asc)) '('('to_value (Int32 '1)) '('type '"rows") '('from '"c") '('to '"f"))) (PgWindow '"" '"" '() '((PgSort (Void) (lambda '() (PgColumnRef '"x")) 'asc)) '('('type '"rows") '('from '"c") '('to '"uf"))) (PgWindow '"" '"" '() '((PgSort (Void) (lambda '() (PgColumnRef '"x")) 'asc)) '('('from_value (Int32 '1)) '('to_value (Int32 '2)) '('type '"rows") '('from '"f") '('to '"f"))) (PgWindow '"" '"" '() '((PgSort (Void) (lambda '() (PgColumnRef '"x")) 'asc)) '('('from_value (Int32 '1)) '('type '"rows") '('from '"f") '('to '"uf"))))))))) '('set_ops '('push)))))
(let result_sink (DataSink 'result))
(let world (Write! world result_sink (Key) output '('('type) '('autoref))))
(let world (Commit! world result_sink))
(let world (CommitAll! world))
(return world)
)
