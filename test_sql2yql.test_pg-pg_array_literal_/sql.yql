(
(let world (Configure! world (DataSource 'config) 'OrderedColumns))
(let output (PgSelect '('('set_items '((PgSetItem '('('result '((PgResultItem '"column0" (Void) (lambda '() (PgArray (PgConst '"a" (PgType 'text)) (PgConst '"b" (PgType 'text))))) (PgResultItem '"column1" (Void) (lambda '() (PgArray (PgArray (PgConst '"a" (PgType 'text)) (PgConst '"b" (PgType 'text)))))) (PgResultItem '"column2" (Void) (lambda '() (PgArray (PgArray (PgConst '"a" (PgType 'text)) (PgConst '"b" (PgType 'text))) (PgArray (PgConst '"c" (PgType 'text)) (PgConst '"d" (PgType 'text)))))) (PgResultItem '"column3" (Void) (lambda '() (PgArray (PgConst '"a" (PgType 'text)) (PgCast (Null) (PgType 'text))))) (PgResultItem '"column4" (Void) (lambda '() (PgArray (PgCast (Null) (PgType 'text))))) (PgResultItem '"column5" (Void) (lambda '() (PgArray (PgConst '1 (PgType 'int4))))) (PgResultItem '"column6" (Void) (lambda '() (PgArray (PgConst '1 (PgType 'int4)) (PgConst '2 (PgType 'int4))))) (PgResultItem '"column7" (Void) (lambda '() (PgArray (PgCast (PgCast (Null) (PgType 'text)) (PgType '"int4")) (PgConst '2 (PgType 'int4))))) (PgResultItem '"column8" (Void) (lambda '() (PgArray (PgArray (PgConst '1 (PgType 'int4)) (PgConst '2 (PgType 'int4)))))) (PgResultItem '"column9" (Void) (lambda '() (PgArray (PgArray (PgConst '1 (PgType 'int4)) (PgConst '2 (PgType 'int4))) (PgArray (PgConst '3 (PgType 'int4)) (PgConst '4 (PgType 'int4)))))) (PgResultItem '"column10" (Void) (lambda '() (PgCall '"array_out" '() (PgArray (PgConst '1 (PgType 'int4)) (PgConst '2 (PgType 'int4)))))) (PgResultItem '"column11" (Void) (lambda '() (PgCall '"array_out" '() (PgArray (PgCast (Null) (PgType 'text)) (PgConst '"NULL" (PgType 'text)) (PgConst '"" (PgType 'text)) (PgConst '"," (PgType 'text)) (PgConst '"{}" (PgType 'text)))))))))))) '('set_ops '('push)))))
(let result_sink (DataSink 'result))
(let world (Write! world result_sink (Key) output '('('type) '('autoref))))
(let world (Commit! world result_sink))
(let world (CommitAll! world))
(return world)
)
