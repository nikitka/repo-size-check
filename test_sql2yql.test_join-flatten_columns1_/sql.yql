(
(import aggregate_module '"/lib/yql/aggregate.yql")
(import window_module '"/lib/yql/window.yql")
(import core_module '"/lib/yql/core.yql")
(let world (block '(
  (let x (Read! world (DataSource '"yt" '"plato") (MrTableConcat (Key '('table (String '"Input1")))) (Void) '()))
  (let table0 (Right! x))
  (let x (Read! world (DataSource '"yt" '"plato") (MrTableConcat (Key '('table (String '"Input2")))) (Void) '()))
  (let table1 (Right! x))
  (let output (block '(
    (let select (block '(
      (let core (EquiJoin '((block '(
        (let flatten (block '(
          (let select (block '(
            (let core table0)
            (let core (PersistableRepr (block '(
              (let projectCoreType (TypeOf core))
              (let core (OrderedSqlProject core '((SqlProjectItem projectCoreType '"column0" (lambda '(row) (block '(
                (let res (AsStructUnordered '('"key" (Member row '"key")) '('"subkey" (Member row '"subkey"))))
                (return res)
              )))) (SqlProjectItem projectCoreType '"column1" (lambda '(row) (block '(
                (let res (AsStruct '('"value" (Concat (String '"value: ") (Member row '"value")))))
                (return res)
              )))))))
              (return core)
            ))))
            (return core)
          )))
          (return select)
        )))
        (let flatten (OrderedFlatMap flatten (lambda '(row) (block '(
          (let res (Just (FlattenStructs row)))
          (return res)
        )))))
        (return flatten)
      )) '"a") '((RemoveSystemMembers table1) '"Input2") '('Inner '"a" '"Input2" '('"a" '"key") '('"Input2" '"key") '()) '()))
      (let core (PersistableRepr (block '(
        (let projectCoreType (TypeOf core))
        (let core (OrderedSqlProject core '((SqlProjectStarItem projectCoreType '"" (lambda '(row) (block '(
          (let res row)
          (return res)
        ))) '()))))
        (return core)
      ))))
      (return core)
    )))
    (let select (Sort select (Bool 'true) (lambda '(row) (PersistableRepr (SqlColumn row '"key" '"Input2")))))
    (let select (RemoveSystemMembers select))
    (return select)
  )))
  (let world (block '(
    (let result_sink (DataSink 'result))
    (let world (Write! world result_sink (Key) output '('('type) '('autoref))))
    (return (Commit! world result_sink))
  )))
  (return world)
)))
(let world (block '(
  (let world (CommitAll! world))
  (return world)
)))
(return world)
)
