(
(let world (Configure! world (DataSource 'config) 'OrderedColumns))
(let output (PgSelect '('('set_items '((PgSetItem '('('result '((PgResultItem '"column0" (Void) (lambda '() (PgAgg '"count" '()))) (PgResultItem '"column1" (Void) (lambda '() (PgAgg '"count" '() (PgConst '0 (PgType 'int4))))) (PgResultItem '"column2" (Void) (lambda '() (PgAgg '"count" '() (PgCast (Null) (PgType 'text))))) (PgResultItem '"column3" (Void) (lambda '() (PgAgg '"count" '() (PgCast (PgCast (Null) (PgType 'text)) (PgType '"text"))))) (PgResultItem '"column4" (Void) (lambda '() (PgAgg '"min" '() (PgConst '5 (PgType 'int4))))) (PgResultItem '"column5" (Void) (lambda '() (PgAgg '"min" '() (PgConst '"a" (PgType 'text))))) (PgResultItem '"column6" (Void) (lambda '() (PgAgg '"min" '() (PgConst '1.0 (PgType 'float8))))) (PgResultItem '"column7" (Void) (lambda '() (PgAgg '"min" '() (PgCast (Null) (PgType 'text))))) (PgResultItem '"column8" (Void) (lambda '() (PgAgg '"min" '() (PgCast (PgCast (Null) (PgType 'text)) (PgType '"text"))))) (PgResultItem '"column9" (Void) (lambda '() (PgAgg '"max" '() (PgConst '6 (PgType 'int4))))) (PgResultItem '"column10" (Void) (lambda '() (PgAgg '"max" '() (PgConst '"a" (PgType 'text))))) (PgResultItem '"column11" (Void) (lambda '() (PgAgg '"max" '() (PgConst '1.0 (PgType 'float8))))) (PgResultItem '"column12" (Void) (lambda '() (PgAgg '"max" '() (PgCast (Null) (PgType 'text))))) (PgResultItem '"column13" (Void) (lambda '() (PgAgg '"max" '() (PgCast (PgCast (Null) (PgType 'text)) (PgType '"text"))))) (PgResultItem '"column14" (Void) (lambda '() (PgAgg '"sum" '() (PgConst '7 (PgType 'int4))))) (PgResultItem '"column15" (Void) (lambda '() (PgAgg '"sum" '() (PgConst '1.0 (PgType 'float8))))) (PgResultItem '"column16" (Void) (lambda '() (PgAgg '"sum" '() (PgCast (PgCast (Null) (PgType 'text)) (PgType '"int4"))))))))))) '('set_ops '('push)))))
(let result_sink (DataSink 'result))
(let world (Write! world result_sink (Key) output '('('type) '('autoref))))
(let world (Commit! world result_sink))
(let world (CommitAll! world))
(return world)
)
