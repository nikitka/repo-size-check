(
(import aggregate_module '"/lib/yql/aggregate.yql")
(import window_module '"/lib/yql/window.yql")
(import core_module '"/lib/yql/core.yql")
(let subquerynode0 (block '(
  (let x (Read! world (DataSource '"yt" '"plato") (MrTableConcat (Key '('table (String '"Input")))) (Void) '()))
  (let table0 (Right! x))
  (return '(world (block '(
    (let select (block '(
      (let core table0)
      (let core (OrderedFilter core (lambda '(row) (Coalesce (And (">=" (Member row '"optkey") (Int32 '"4")) ("<=" (Member row '"optkey") (Int32 '"20"))) (Bool 'false)))))
      (let core (PersistableRepr (block '(
        (let projectCoreType (TypeOf core))
        (let core (OrderedSqlProject core '((SqlProjectItem projectCoreType '"optkey" (lambda '(row) (block '(
          (let res (Member row '"optkey"))
          (return res)
        )))))))
        (return core)
      ))))
      (return core)
    )))
    (return select)
  ))))
)))
(let world (Nth subquerynode0 '0))
(let subquery0 (Nth subquerynode0 '1))
(let subquerynode1 (block '(
  (let x (Read! world (DataSource '"yt" '"plato") (MrTableConcat (Key '('table (String '"Input")))) (Void) '()))
  (let table1 (Right! x))
  (return '(world (block '(
    (let select (block '(
      (let core table1)
      (let core (OrderedFilter core (lambda '(row) (Coalesce (And (">=" (Member row '"optkey") (Int32 '"6")) ("<=" (Member row '"optkey") (Int32 '"20"))) (Bool 'false)))))
      (let core (PersistableRepr (block '(
        (let projectCoreType (TypeOf core))
        (let core (OrderedSqlProject core '((SqlProjectItem projectCoreType '"key" (lambda '(row) (block '(
          (let res (Member row '"key"))
          (return res)
        )))))))
        (return core)
      ))))
      (return core)
    )))
    (return select)
  ))))
)))
(let world (Nth subquerynode1 '0))
(let subquery1 (Nth subquerynode1 '1))
(let subquerynode2 (block '(
  (let x (Read! world (DataSource '"yt" '"plato") (MrTableConcat (Key '('table (String '"Input")))) (Void) '()))
  (let table2 (Right! x))
  (return '(world (block '(
    (let select (block '(
      (let core table2)
      (let core (OrderedFilter core (lambda '(row) (Coalesce (And (">=" (Member row '"optkey") (Int32 '"8")) ("<=" (Member row '"optkey") (Int32 '"20"))) (Bool 'false)))))
      (let core (PersistableRepr (block '(
        (let projectCoreType (TypeOf core))
        (let core (OrderedSqlProject core '((SqlProjectItem projectCoreType '"key" (lambda '(row) (block '(
          (let res (Member row '"key"))
          (return res)
        )))))))
        (return core)
      ))))
      (return core)
    )))
    (return select)
  ))))
)))
(let world (Nth subquerynode2 '0))
(let subquery2 (Nth subquerynode2 '1))
(let subquerynode3 (block '(
  (let x (Read! world (DataSource '"yt" '"plato") (MrTableConcat (Key '('table (String '"Input")))) (Void) '()))
  (let table3 (Right! x))
  (return '(world (block '(
    (let select (block '(
      (let core table3)
      (let core (OrderedFilter core (lambda '(row) (Coalesce (And (">=" (Member row '"optkey") (Int32 '"10")) ("<=" (Member row '"optkey") (Int32 '"20"))) (Bool 'false)))))
      (let core (PersistableRepr (block '(
        (let projectCoreType (TypeOf core))
        (let core (OrderedSqlProject core '((SqlProjectItem projectCoreType '"optkey" (lambda '(row) (block '(
          (let res (Member row '"optkey"))
          (return res)
        )))))))
        (return core)
      ))))
      (return core)
    )))
    (return select)
  ))))
)))
(let world (Nth subquerynode3 '0))
(let subquery3 (Nth subquerynode3 '1))
(let subquerynode4 (block '(
  (let x (Read! world (DataSource '"yt" '"plato") (MrTableConcat (Key '('table (String '"Input")))) (Void) '()))
  (let table4 (Right! x))
  (return '(world (block '(
    (let select (block '(
      (let core table4)
      (let core (OrderedFilter core (lambda '(row) (Coalesce (And (">=" (Member row '"optkey") (Int32 '"1")) ("<=" (Member row '"optkey") (Int32 '"16"))) (Bool 'false)))))
      (let core (PersistableRepr (block '(
        (let projectCoreType (TypeOf core))
        (let core (OrderedSqlProject core '((SqlProjectItem projectCoreType '"optkey" (lambda '(row) (block '(
          (let res (Member row '"optkey"))
          (return res)
        )))))))
        (return core)
      ))))
      (return core)
    )))
    (return select)
  ))))
)))
(let world (Nth subquerynode4 '0))
(let subquery4 (Nth subquerynode4 '1))
(let subquerynode5 (block '(
  (let x (Read! world (DataSource '"yt" '"plato") (MrTableConcat (Key '('table (String '"Input")))) (Void) '()))
  (let table5 (Right! x))
  (return '(world (block '(
    (let select (block '(
      (let core table5)
      (let core (OrderedFilter core (lambda '(row) (Coalesce (And (">=" (Member row '"optkey") (Int32 '"1")) ("<=" (Member row '"optkey") (Int32 '"12"))) (Bool 'false)))))
      (let core (PersistableRepr (block '(
        (let projectCoreType (TypeOf core))
        (let core (OrderedSqlProject core '((SqlProjectItem projectCoreType '"key" (lambda '(row) (block '(
          (let res (Member row '"key"))
          (return res)
        )))))))
        (return core)
      ))))
      (return core)
    )))
    (return select)
  ))))
)))
(let world (Nth subquerynode5 '0))
(let subquery5 (Nth subquerynode5 '1))
(let world (block '(
  (let x (Read! world (DataSource '"yt" '"plato") (MrTableConcat (Key '('table (String '"Input")))) (Void) '()))
  (let table6 (Right! x))
  (let output (block '(
    (let select (block '(
      (let core table6)
      (let core (OrderedFilter core (lambda '(row) (Coalesce (And (And (And (SqlIn subquery0 ("+" (Member row '"key") (Int32 '"1")) '('('tableSource) '('warnNoAnsi))) (SqlIn subquery1 (Member row '"optkey") '('('tableSource) '('warnNoAnsi)))) (And (SqlIn subquery2 (Member row '"key") '('('isCompact) '('tableSource) '('warnNoAnsi))) (SqlIn subquery3 ("+" (Member row '"optkey") (Int32 '"3")) '('('tableSource) '('warnNoAnsi))))) (And (And (Not (SqlIn subquery5 ("+" (Member row '"key") (Int32 '"4")) '('('tableSource) '('warnNoAnsi)))) (SqlIn subquery3 (Member row '"key") '('('tableSource) '('warnNoAnsi)))) (And (And (Or (SqlIn subquery4 (Member row '"optkey") '('('tableSource) '('warnNoAnsi))) (SqlIn subquery4 (Member row '"key") '('('tableSource) '('warnNoAnsi)))) (SqlIn subquery5 ("-" (Member row '"key") (Int32 '"1")) '('('tableSource) '('warnNoAnsi)))) (Not (SqlIn subquery2 ("-" (Member row '"key") (Int32 '"3")) '('('tableSource) '('warnNoAnsi))))))) (Bool 'false)))))
      (let core (PersistableRepr (block '(
        (let projectCoreType (TypeOf core))
        (let core (OrderedSqlProject core '((SqlProjectItem projectCoreType '"key" (lambda '(row) (block '(
          (let res (Member row '"key"))
          (return res)
        )))))))
        (return core)
      ))))
      (return core)
    )))
    (return select)
  )))
  (let output (Unordered output))
  (let world (block '(
    (let result_sink (DataSink 'result))
    (let world (Write! world result_sink (Key) output '('('type) '('autoref) '('columns '('"key")))))
    (return (Commit! world result_sink))
  )))
  (return world)
)))
(let world (block '(
  (let world (CommitAll! world))
  (return world)
)))
(return world)
)
