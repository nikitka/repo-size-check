(
(let world (Configure! world (DataSource 'config) 'OrderedColumns))
(let read0 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"catalog_returns"))) (Void) '()))
(let world (Left! read0))
(let read1 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"date_dim"))) (Void) '()))
(let world (Left! read1))
(let read2 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"customer_address"))) (Void) '()))
(let world (Left! read2))
(let read3 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"customer_address"))) (Void) '()))
(let world (Left! read3))
(let read4 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"customer"))) (Void) '()))
(let world (Left! read4))
(let output (PgSelect '('('set_items '((PgSetItem '('('result '((PgResultItem '"c_customer_id" (Void) (lambda '() (PgColumnRef '"c_customer_id"))) (PgResultItem '"c_salutation" (Void) (lambda '() (PgColumnRef '"c_salutation"))) (PgResultItem '"c_first_name" (Void) (lambda '() (PgColumnRef '"c_first_name"))) (PgResultItem '"c_last_name" (Void) (lambda '() (PgColumnRef '"c_last_name"))) (PgResultItem '"ca_street_number" (Void) (lambda '() (PgColumnRef '"ca_street_number"))) (PgResultItem '"ca_street_name" (Void) (lambda '() (PgColumnRef '"ca_street_name"))) (PgResultItem '"ca_street_type" (Void) (lambda '() (PgColumnRef '"ca_street_type"))) (PgResultItem '"ca_suite_number" (Void) (lambda '() (PgColumnRef '"ca_suite_number"))) (PgResultItem '"ca_city" (Void) (lambda '() (PgColumnRef '"ca_city"))) (PgResultItem '"ca_county" (Void) (lambda '() (PgColumnRef '"ca_county"))) (PgResultItem '"ca_state" (Void) (lambda '() (PgColumnRef '"ca_state"))) (PgResultItem '"ca_zip" (Void) (lambda '() (PgColumnRef '"ca_zip"))) (PgResultItem '"ca_country" (Void) (lambda '() (PgColumnRef '"ca_country"))) (PgResultItem '"ca_gmt_offset" (Void) (lambda '() (PgColumnRef '"ca_gmt_offset"))) (PgResultItem '"ca_location_type" (Void) (lambda '() (PgColumnRef '"ca_location_type"))) (PgResultItem '"ctr_total_return" (Void) (lambda '() (PgColumnRef '"ctr_total_return"))))) '('from '('((PgSelect '('('set_items '((PgSetItem '('('result '((PgResultItem '"ctr_customer_sk" (Void) (lambda '() (PgColumnRef '"cr_returning_customer_sk"))) (PgResultItem '"ctr_state" (Void) (lambda '() (PgColumnRef '"ca_state"))) (PgResultItem '"ctr_total_return" (Void) (lambda '() (PgAgg '"sum" '() (PgColumnRef '"cr_return_amt_inc_tax")))))) '('from '('((Right! read0) '"catalog_returns" '()) '((Right! read1) '"date_dim" '()) '((Right! read2) '"customer_address" '()))) '('join_ops '('() '() '())) '('where (PgWhere (Void) (lambda '() (PgAnd (PgAnd (PgOp '"=" (PgColumnRef '"cr_returned_date_sk") (PgColumnRef '"d_date_sk")) (PgOp '"=" (PgColumnRef '"d_year") (PgConst '1998 (PgType 'int4)))) (PgOp '"=" (PgColumnRef '"cr_returning_addr_sk") (PgColumnRef '"ca_address_sk")))))) '('group_by '((PgGroup (Void) (lambda '() (PgColumnRef '"cr_returning_customer_sk"))) (PgGroup (Void) (lambda '() (PgColumnRef '"ca_state"))))))))) '('set_ops '('push)))) '"ctr1" '()) '((Right! read3) '"customer_address" '()) '((Right! read4) '"customer" '()))) '('join_ops '('() '() '())) '('where (PgWhere (Void) (lambda '() (PgAnd (PgAnd (PgAnd (PgOp '">" (PgColumnRef '"ctr1" '"ctr_total_return") (PgSubLink 'expr (Void) (Void) (Void) (lambda '() (PgSelect '('('set_items '((PgSetItem '('('result '((PgResultItem '"column0" (Void) (lambda '() (PgOp '"*" (PgAgg '"avg" '() (PgColumnRef '"ctr_total_return")) (PgCast (PgConst '1.2 (PgType 'numeric)) (PgType '"numeric"))))))) '('from '('((PgSelect '('('set_items '((PgSetItem '('('result '((PgResultItem '"ctr_customer_sk" (Void) (lambda '() (PgColumnRef '"cr_returning_customer_sk"))) (PgResultItem '"ctr_state" (Void) (lambda '() (PgColumnRef '"ca_state"))) (PgResultItem '"ctr_total_return" (Void) (lambda '() (PgAgg '"sum" '() (PgColumnRef '"cr_return_amt_inc_tax")))))) '('from '('((Right! read0) '"catalog_returns" '()) '((Right! read1) '"date_dim" '()) '((Right! read2) '"customer_address" '()))) '('join_ops '('() '() '())) '('where (PgWhere (Void) (lambda '() (PgAnd (PgAnd (PgOp '"=" (PgColumnRef '"cr_returned_date_sk") (PgColumnRef '"d_date_sk")) (PgOp '"=" (PgColumnRef '"d_year") (PgConst '1998 (PgType 'int4)))) (PgOp '"=" (PgColumnRef '"cr_returning_addr_sk") (PgColumnRef '"ca_address_sk")))))) '('group_by '((PgGroup (Void) (lambda '() (PgColumnRef '"cr_returning_customer_sk"))) (PgGroup (Void) (lambda '() (PgColumnRef '"ca_state"))))))))) '('set_ops '('push)))) '"ctr2" '()))) '('join_ops '('())) '('where (PgWhere (Void) (lambda '() (PgOp '"=" (PgColumnRef '"ctr1" '"ctr_state") (PgColumnRef '"ctr2" '"ctr_state"))))))))) '('set_ops '('push))))))) (PgOp '"=" (PgColumnRef '"ca_address_sk") (PgColumnRef '"c_current_addr_sk"))) (PgOp '"=" (PgColumnRef '"ca_state") (PgConst '"IL" (PgType 'text)))) (PgOp '"=" (PgColumnRef '"ctr1" '"ctr_customer_sk") (PgColumnRef '"c_customer_sk")))))) '('sort '((PgSort (Void) (lambda '() (PgColumnRef '"c_customer_id")) 'asc) (PgSort (Void) (lambda '() (PgColumnRef '"c_salutation")) 'asc) (PgSort (Void) (lambda '() (PgColumnRef '"c_first_name")) 'asc) (PgSort (Void) (lambda '() (PgColumnRef '"c_last_name")) 'asc) (PgSort (Void) (lambda '() (PgColumnRef '"ca_street_number")) 'asc) (PgSort (Void) (lambda '() (PgColumnRef '"ca_street_name")) 'asc) (PgSort (Void) (lambda '() (PgColumnRef '"ca_street_type")) 'asc) (PgSort (Void) (lambda '() (PgColumnRef '"ca_suite_number")) 'asc) (PgSort (Void) (lambda '() (PgColumnRef '"ca_city")) 'asc) (PgSort (Void) (lambda '() (PgColumnRef '"ca_county")) 'asc) (PgSort (Void) (lambda '() (PgColumnRef '"ca_state")) 'asc) (PgSort (Void) (lambda '() (PgColumnRef '"ca_zip")) 'asc) (PgSort (Void) (lambda '() (PgColumnRef '"ca_country")) 'asc) (PgSort (Void) (lambda '() (PgColumnRef '"ca_gmt_offset")) 'asc) (PgSort (Void) (lambda '() (PgColumnRef '"ca_location_type")) 'asc) (PgSort (Void) (lambda '() (PgColumnRef '"ctr_total_return")) 'asc))))))) '('set_ops '('push)) '('limit (PgConst '100 (PgType 'int4))))))
(let result_sink (DataSink 'result))
(let world (Write! world result_sink (Key) output '('('type) '('autoref))))
(let world (Commit! world result_sink))
(let world (CommitAll! world))
(return world)
)
