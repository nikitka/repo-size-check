(
(let world (Configure! world (DataSource 'config) 'OrderedColumns))
(let read0 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"date_dim"))) (Void) '()))
(let world (Left! read0))
(let read1 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"store_sales"))) (Void) '()))
(let world (Left! read1))
(let read2 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"item"))) (Void) '()))
(let world (Left! read2))
(let output (PgSelect '('('set_items '((PgSetItem '('('result '((PgResultItem '"d_year" (Void) (lambda '() (PgColumnRef '"dt" '"d_year"))) (PgResultItem '"i_category_id" (Void) (lambda '() (PgColumnRef '"item" '"i_category_id"))) (PgResultItem '"i_category" (Void) (lambda '() (PgColumnRef '"item" '"i_category"))) (PgResultItem '"column0" (Void) (lambda '() (PgAgg '"sum" '() (PgColumnRef '"ss_ext_sales_price")))))) '('from '('((Right! read0) '"dt" '()) '((Right! read1) '"store_sales" '()) '((Right! read2) '"item" '()))) '('join_ops '('() '() '())) '('where (PgWhere (Void) (lambda '() (PgAnd (PgAnd (PgAnd (PgAnd (PgOp '"=" (PgColumnRef '"dt" '"d_date_sk") (PgColumnRef '"store_sales" '"ss_sold_date_sk")) (PgOp '"=" (PgColumnRef '"store_sales" '"ss_item_sk") (PgColumnRef '"item" '"i_item_sk"))) (PgOp '"=" (PgColumnRef '"item" '"i_manager_id") (PgConst '1 (PgType 'int4)))) (PgOp '"=" (PgColumnRef '"dt" '"d_moy") (PgConst '12 (PgType 'int4)))) (PgOp '"=" (PgColumnRef '"dt" '"d_year") (PgConst '1998 (PgType 'int4))))))) '('group_by '((PgGroup (Void) (lambda '() (PgColumnRef '"dt" '"d_year"))) (PgGroup (Void) (lambda '() (PgColumnRef '"item" '"i_category_id"))) (PgGroup (Void) (lambda '() (PgColumnRef '"item" '"i_category"))))) '('sort '((PgSort (Void) (lambda '() (PgAgg '"sum" '() (PgColumnRef '"ss_ext_sales_price"))) 'desc) (PgSort (Void) (lambda '() (PgColumnRef '"dt" '"d_year")) 'asc) (PgSort (Void) (lambda '() (PgColumnRef '"item" '"i_category_id")) 'asc) (PgSort (Void) (lambda '() (PgColumnRef '"item" '"i_category")) 'asc))))))) '('set_ops '('push)) '('limit (PgConst '100 (PgType 'int4))))))
(let result_sink (DataSink 'result))
(let world (Write! world result_sink (Key) output '('('type) '('autoref))))
(let world (Commit! world result_sink))
(let world (CommitAll! world))
(return world)
)
