(
(import aggregate_module '"/lib/yql/aggregate.yql")
(import window_module '"/lib/yql/window.yql")
(import core_module '"/lib/yql/core.yql")
(let world (block '(
  (let x (Read! world (DataSource '"yt" '"plato") (MrTableConcat (Key '('table (String '"Input")))) (Void) '()))
  (let table0 (Right! x))
  (let output (block '(
    (let select (block '(
      (let core table0)
      (let core (OrderedFlatMap core (lambda '(row) (AsList (AddMember (AddMember (AddMember row 'group__yql_anonymous_window0_0 (Concat (Member row '"key") (String '"1"))) 'group__yql_anonymous_window1_0 (Concat (Member row '"key") (String '"2"))) 'group_w_0 (Concat (Member row '"key") (String '"3")))))))
      (let core (block '(
        (let partitioning core)
        (let partitioning (CalcOverWindow partitioning '('"group__yql_anonymous_window0_0") (Void) '((WinOnRows '('('begin (Void)) '('end (Void))) '('Count0 (Apply (bind window_module '"count_traits_factory") (TypeOf partitioning) (lambda '(row) (PersistableRepr (Void)))))))))
        (let partitioning (CalcOverWindow partitioning '('"group__yql_anonymous_window1_0") (Void) '((WinOnRows '('('begin (Void)) '('end (Void))) '('Count1 (Apply (bind window_module '"count_traits_factory") (TypeOf partitioning) (lambda '(row) (PersistableRepr (Void)))))))))
        (let partitioning (CalcOverWindow partitioning '('"group_w_0") (Void) '((WinOnRows '('('begin (Void)) '('end (Void))) '('Count2 (Apply (bind window_module '"count_traits_factory") (TypeOf partitioning) (lambda '(row) (PersistableRepr (Void)))))))))
        (return partitioning)
      )))
      (let core (PersistableRepr (block '(
        (let projectCoreType (TypeOf core))
        (let core (OrderedSqlProject core '((SqlProjectStarItem projectCoreType '"t" (lambda '(row) (block '(
          (let row (RemoveMember row 'group__yql_anonymous_window0_0))
          (let row (RemoveMember row 'group__yql_anonymous_window1_0))
          (let row (RemoveMember row 'group_w_0))
          (let row (RemoveMember row 'Count0))
          (let row (RemoveMember row 'Count1))
          (let row (RemoveMember row 'Count2))
          (let res row)
          (return res)
        ))) '()) (SqlProjectItem projectCoreType '"c1" (lambda '(row) (block '(
          (let res (Member row 'Count0))
          (return res)
        )))) (SqlProjectItem projectCoreType '"c2" (lambda '(row) (block '(
          (let res (Member row 'Count1))
          (return res)
        )))) (SqlProjectItem projectCoreType '"c3" (lambda '(row) (block '(
          (let res (Member row 'Count2))
          (return res)
        )))))))
        (return core)
      ))))
      (return core)
    )))
    (let select (Sort select (Bool 'true) (lambda '(row) (PersistableRepr (Member row '"subkey")))))
    (let select (RemoveSystemMembers select))
    (return select)
  )))
  (let world (block '(
    (let result_sink (DataSink 'result))
    (let world (Write! world result_sink (Key) output '('('type) '('autoref))))
    (return (Commit! world result_sink))
  )))
  (return world)
)))
(let world (block '(
  (let world (CommitAll! world))
  (return world)
)))
(return world)
)
