(
(import aggregate_module '"/lib/yql/aggregate.yql")
(import window_module '"/lib/yql/window.yql")
(import core_module '"/lib/yql/core.yql")
(let world (block '(
  (let output (block '(
    (let select (block '(
      (let core (AsList (AsStruct)))
      (let core (PersistableRepr (block '(
        (let projectCoreType (TypeOf core))
        (let core (OrderedSqlProject core '((SqlProjectItem projectCoreType '"column0" (lambda '(row) (block '(
          (let res '(("==" (Variant (Int32 '"1") '"a" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"1")) '"b" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32)))))) ("==" (Variant (Int32 '"1") '"b" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"1")) '"b" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32)))))) ("==" (Variant (Int32 '"1") '"b" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"2")) '"b" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32)))))) ("==" (Variant (Int32 '"1") '"b" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"1")) '"c" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32)))))) ("==" (Variant ("/MayWarn" (Uint32 '"1") (Uint32 '"0")) '"b" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"1")) '"c" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32)))))) ("==" (Variant ("/MayWarn" (Uint32 '"1") (Uint32 '"0")) '"b" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"1")) '"b" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32))))))))
          (return res)
        )))))))
        (return core)
      ))))
      (return core)
    )))
    (return select)
  )))
  (let output (Unordered output))
  (let world (block '(
    (let result_sink (DataSink 'result))
    (let world (Write! world result_sink (Key) output '('('type) '('autoref) '('columns '('"column0")))))
    (return (Commit! world result_sink))
  )))
  (return world)
)))
(let world (block '(
  (let output (block '(
    (let select (block '(
      (let core (AsList (AsStruct)))
      (let core (PersistableRepr (block '(
        (let projectCoreType (TypeOf core))
        (let core (OrderedSqlProject core '((SqlProjectItem projectCoreType '"column0" (lambda '(row) (block '(
          (let res '(("!=" (Variant (Int32 '"1") '"a" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"1")) '"b" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32)))))) ("!=" (Variant (Int32 '"1") '"b" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"1")) '"b" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32)))))) ("!=" (Variant (Int32 '"1") '"b" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"2")) '"b" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32)))))) ("!=" (Variant (Int32 '"1") '"b" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"1")) '"c" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32)))))) ("!=" (Variant ("/MayWarn" (Uint32 '"1") (Uint32 '"0")) '"b" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"1")) '"c" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32)))))) ("!=" (Variant ("/MayWarn" (Uint32 '"1") (Uint32 '"0")) '"b" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"1")) '"b" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32))))))))
          (return res)
        )))))))
        (return core)
      ))))
      (return core)
    )))
    (return select)
  )))
  (let output (Unordered output))
  (let world (block '(
    (let result_sink (DataSink 'result))
    (let world (Write! world result_sink (Key) output '('('type) '('autoref) '('columns '('"column0")))))
    (return (Commit! world result_sink))
  )))
  (return world)
)))
(let world (block '(
  (let output (block '(
    (let select (block '(
      (let core (AsList (AsStruct)))
      (let core (PersistableRepr (block '(
        (let projectCoreType (TypeOf core))
        (let core (OrderedSqlProject core '((SqlProjectItem projectCoreType '"column0" (lambda '(row) (block '(
          (let res '(("<" (Variant (Int32 '"1") '"a" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"1")) '"b" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32)))))) ("<" (Variant (Int32 '"1") '"b" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"1")) '"b" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32)))))) ("<" (Variant (Int32 '"1") '"b" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"2")) '"b" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32)))))) ("<" (Variant (Int32 '"1") '"b" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"1")) '"c" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32)))))) ("<" (Variant ("/MayWarn" (Uint32 '"1") (Uint32 '"0")) '"b" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"1")) '"c" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32)))))) ("<" (Variant ("/MayWarn" (Uint32 '"1") (Uint32 '"0")) '"b" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"1")) '"b" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32))))))))
          (return res)
        )))))))
        (return core)
      ))))
      (return core)
    )))
    (return select)
  )))
  (let output (Unordered output))
  (let world (block '(
    (let result_sink (DataSink 'result))
    (let world (Write! world result_sink (Key) output '('('type) '('autoref) '('columns '('"column0")))))
    (return (Commit! world result_sink))
  )))
  (return world)
)))
(let world (block '(
  (let output (block '(
    (let select (block '(
      (let core (AsList (AsStruct)))
      (let core (PersistableRepr (block '(
        (let projectCoreType (TypeOf core))
        (let core (OrderedSqlProject core '((SqlProjectItem projectCoreType '"column0" (lambda '(row) (block '(
          (let res '(("<=" (Variant (Int32 '"1") '"a" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"1")) '"b" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32)))))) ("<=" (Variant (Int32 '"1") '"b" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"1")) '"b" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32)))))) ("<=" (Variant (Int32 '"1") '"b" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"2")) '"b" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32)))))) ("<=" (Variant (Int32 '"1") '"b" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"1")) '"c" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32)))))) ("<=" (Variant ("/MayWarn" (Uint32 '"1") (Uint32 '"0")) '"b" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"1")) '"c" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32)))))) ("<=" (Variant ("/MayWarn" (Uint32 '"1") (Uint32 '"0")) '"b" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"1")) '"b" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32))))))))
          (return res)
        )))))))
        (return core)
      ))))
      (return core)
    )))
    (return select)
  )))
  (let output (Unordered output))
  (let world (block '(
    (let result_sink (DataSink 'result))
    (let world (Write! world result_sink (Key) output '('('type) '('autoref) '('columns '('"column0")))))
    (return (Commit! world result_sink))
  )))
  (return world)
)))
(let world (block '(
  (let output (block '(
    (let select (block '(
      (let core (AsList (AsStruct)))
      (let core (PersistableRepr (block '(
        (let projectCoreType (TypeOf core))
        (let core (OrderedSqlProject core '((SqlProjectItem projectCoreType '"column0" (lambda '(row) (block '(
          (let res '((">" (Variant (Int32 '"1") '"a" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"1")) '"b" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32)))))) (">" (Variant (Int32 '"1") '"b" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"1")) '"b" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32)))))) (">" (Variant (Int32 '"1") '"b" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"2")) '"b" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32)))))) (">" (Variant (Int32 '"1") '"b" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"1")) '"c" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32)))))) (">" (Variant ("/MayWarn" (Uint32 '"1") (Uint32 '"0")) '"b" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"1")) '"c" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32)))))) (">" (Variant ("/MayWarn" (Uint32 '"1") (Uint32 '"0")) '"b" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"1")) '"b" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32))))))))
          (return res)
        )))))))
        (return core)
      ))))
      (return core)
    )))
    (return select)
  )))
  (let output (Unordered output))
  (let world (block '(
    (let result_sink (DataSink 'result))
    (let world (Write! world result_sink (Key) output '('('type) '('autoref) '('columns '('"column0")))))
    (return (Commit! world result_sink))
  )))
  (return world)
)))
(let world (block '(
  (let output (block '(
    (let select (block '(
      (let core (AsList (AsStruct)))
      (let core (PersistableRepr (block '(
        (let projectCoreType (TypeOf core))
        (let core (OrderedSqlProject core '((SqlProjectItem projectCoreType '"column0" (lambda '(row) (block '(
          (let res '((">=" (Variant (Int32 '"1") '"a" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"1")) '"b" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32)))))) (">=" (Variant (Int32 '"1") '"b" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"1")) '"b" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32)))))) (">=" (Variant (Int32 '"1") '"b" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"2")) '"b" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32)))))) (">=" (Variant (Int32 '"1") '"b" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"1")) '"c" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32)))))) (">=" (Variant ("/MayWarn" (Uint32 '"1") (Uint32 '"0")) '"b" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"1")) '"c" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32)))))) (">=" (Variant ("/MayWarn" (Uint32 '"1") (Uint32 '"0")) '"b" (VariantType (StructType '('"a" (DataType 'Int32)) '('"b" (OptionalType (DataType 'Uint32)))))) (Variant (Apply (lambda '("$x") (block '(
            (let $f (Callable (CallableType '('"0") '((TypeOf "$x"))) (lambda '() (block '(
              (return "$x")
            )))))
            (return (Apply "$f"))
          ))) (Uint32 '"1")) '"b" (VariantType (StructType '('"b" (DataType 'Int64)) '('"c" (DataType 'Uint32))))))))
          (return res)
        )))))))
        (return core)
      ))))
      (return core)
    )))
    (return select)
  )))
  (let output (Unordered output))
  (let world (block '(
    (let result_sink (DataSink 'result))
    (let world (Write! world result_sink (Key) output '('('type) '('autoref) '('columns '('"column0")))))
    (return (Commit! world result_sink))
  )))
  (return world)
)))
(let world (block '(
  (let world (CommitAll! world))
  (return world)
)))
(return world)
)
