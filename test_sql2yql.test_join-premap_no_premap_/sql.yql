(
(import aggregate_module '"/lib/yql/aggregate.yql")
(import window_module '"/lib/yql/window.yql")
(import core_module '"/lib/yql/core.yql")
(let world (Configure! world (DataSource '"config") '"DisablePullUpFlatMapOverJoin"))
(let world (block '(
  (let x (Read! world (DataSource '"yt" '"plato") (MrTableConcat (Key '('table (String '"Input1")))) (Void) '()))
  (let table0 (Right! x))
  (let x (Read! world (DataSource '"yt" '"plato") (MrTableConcat (Key '('table (String '"Input2")))) (Void) '()))
  (let table1 (Right! x))
  (let output (block '(
    (let select (block '(
      (let core (EquiJoin '((RemoveSystemMembers (block '(
        (let select (block '(
          (let core table0)
          (let core (PersistableRepr (block '(
            (let projectCoreType (TypeOf core))
            (let core (OrderedSqlProject core '((SqlProjectItem projectCoreType '"key" (lambda '(row) (block '(
              (let res (Member row '"key"))
              (return res)
            )))) (SqlProjectItem projectCoreType '"subkey" (lambda '(row) (block '(
              (let res (Concat (Member row '"subkey") (Member row '"key")))
              (return res)
            )))) (SqlProjectItem projectCoreType '"value" (lambda '(row) (block '(
              (let res (Member row '"value"))
              (return res)
            )))))))
            (return core)
          ))))
          (return core)
        )))
        (return select)
      ))) '"a") '((RemoveSystemMembers table1) '"b") '('Inner '"a" '"b" '('"a" '"key") '('"b" '"key") '()) '()))
      (let core (PersistableRepr (block '(
        (let projectCoreType (TypeOf core))
        (let core (OrderedSqlProject core '((SqlProjectItem projectCoreType '"a.key" (lambda '(row) (block '(
          (let res (SqlColumn row '"key" '"a"))
          (return res)
        )))) (SqlProjectItem projectCoreType '"a.subkey" (lambda '(row) (block '(
          (let res (SqlColumn row '"subkey" '"a"))
          (return res)
        )))) (SqlProjectItem projectCoreType '"b.value" (lambda '(row) (block '(
          (let res (SqlColumn row '"value" '"b"))
          (return res)
        )))))))
        (return core)
      ))))
      (return core)
    )))
    (let select (Sort select (Bool 'true) (lambda '(row) (PersistableRepr (SqlColumn row '"key" '"a")))))
    (return select)
  )))
  (let world (block '(
    (let result_sink (DataSink 'result))
    (let world (Write! world result_sink (Key) output '('('type) '('autoref) '('columns '('"a.key" '"a.subkey" '"b.value")))))
    (return (Commit! world result_sink))
  )))
  (return world)
)))
(let world (block '(
  (let x (Read! world (DataSource '"yt" '"plato") (MrTableConcat (Key '('table (String '"Input1")))) (Void) '()))
  (let table2 (Right! x))
  (let x (Read! world (DataSource '"yt" '"plato") (MrTableConcat (Key '('table (String '"Input2")))) (Void) '()))
  (let table3 (Right! x))
  (let output (block '(
    (let select (block '(
      (let core (EquiJoin '((RemoveSystemMembers (block '(
        (let select (block '(
          (let core table2)
          (let core (PersistableRepr (block '(
            (let projectCoreType (TypeOf core))
            (let core (OrderedSqlProject core '((SqlProjectItem projectCoreType '"key" (lambda '(row) (block '(
              (let res (Member row '"key"))
              (return res)
            )))) (SqlProjectItem projectCoreType '"subkey" (lambda '(row) (block '(
              (let res (String '"aaa"))
              (return res)
            )))) (SqlProjectItem projectCoreType '"value" (lambda '(row) (block '(
              (let res (Member row '"value"))
              (return res)
            )))))))
            (return core)
          ))))
          (return core)
        )))
        (return select)
      ))) '"a") '((RemoveSystemMembers table3) '"b") '('Inner '"a" '"b" '('"a" '"key") '('"b" '"key") '()) '()))
      (let core (PersistableRepr (block '(
        (let projectCoreType (TypeOf core))
        (let core (OrderedSqlProject core '((SqlProjectItem projectCoreType '"a.key" (lambda '(row) (block '(
          (let res (SqlColumn row '"key" '"a"))
          (return res)
        )))) (SqlProjectItem projectCoreType '"a.subkey" (lambda '(row) (block '(
          (let res (SqlColumn row '"subkey" '"a"))
          (return res)
        )))) (SqlProjectItem projectCoreType '"b.value" (lambda '(row) (block '(
          (let res (SqlColumn row '"value" '"b"))
          (return res)
        )))))))
        (return core)
      ))))
      (return core)
    )))
    (let select (Sort select (Bool 'true) (lambda '(row) (PersistableRepr (SqlColumn row '"key" '"a")))))
    (return select)
  )))
  (let world (block '(
    (let result_sink (DataSink 'result))
    (let world (Write! world result_sink (Key) output '('('type) '('autoref) '('columns '('"a.key" '"a.subkey" '"b.value")))))
    (return (Commit! world result_sink))
  )))
  (return world)
)))
(let world (block '(
  (let x (Read! world (DataSource '"yt" '"plato") (MrTableConcat (Key '('table (String '"Input1")))) (Void) '()))
  (let table4 (Right! x))
  (let x (Read! world (DataSource '"yt" '"plato") (MrTableConcat (Key '('table (String '"Input2")))) (Void) '()))
  (let table5 (Right! x))
  (let output (block '(
    (let select (block '(
      (let core (EquiJoin '((RemoveSystemMembers (block '(
        (let select (block '(
          (let core table4)
          (let core (PersistableRepr (block '(
            (let projectCoreType (TypeOf core))
            (let core (OrderedSqlProject core '((SqlProjectItem projectCoreType '"key" (lambda '(row) (block '(
              (let res (Member row '"key"))
              (return res)
            )))) (SqlProjectItem projectCoreType '"subkey" (lambda '(row) (block '(
              (let res (Just (Just (Int32 '"1"))))
              (return res)
            )))) (SqlProjectItem projectCoreType '"value" (lambda '(row) (block '(
              (let res (Member row '"value"))
              (return res)
            )))))))
            (return core)
          ))))
          (return core)
        )))
        (return select)
      ))) '"a") '((RemoveSystemMembers table5) '"b") '('Inner '"a" '"b" '('"a" '"key") '('"b" '"key") '()) '()))
      (let core (PersistableRepr (block '(
        (let projectCoreType (TypeOf core))
        (let core (OrderedSqlProject core '((SqlProjectItem projectCoreType '"a.key" (lambda '(row) (block '(
          (let res (SqlColumn row '"key" '"a"))
          (return res)
        )))) (SqlProjectItem projectCoreType '"a.subkey" (lambda '(row) (block '(
          (let res (SqlColumn row '"subkey" '"a"))
          (return res)
        )))) (SqlProjectItem projectCoreType '"b.value" (lambda '(row) (block '(
          (let res (SqlColumn row '"value" '"b"))
          (return res)
        )))))))
        (return core)
      ))))
      (return core)
    )))
    (let select (Sort select (Bool 'true) (lambda '(row) (PersistableRepr (SqlColumn row '"key" '"a")))))
    (return select)
  )))
  (let world (block '(
    (let result_sink (DataSink 'result))
    (let world (Write! world result_sink (Key) output '('('type) '('autoref) '('columns '('"a.key" '"a.subkey" '"b.value")))))
    (return (Commit! world result_sink))
  )))
  (return world)
)))
(let world (block '(
  (let x (Read! world (DataSource '"yt" '"plato") (MrTableConcat (Key '('table (String '"Input1")))) (Void) '()))
  (let table6 (Right! x))
  (let x (Read! world (DataSource '"yt" '"plato") (MrTableConcat (Key '('table (String '"Input2")))) (Void) '()))
  (let table7 (Right! x))
  (let output (block '(
    (let select (block '(
      (let core (EquiJoin '((RemoveSystemMembers (block '(
        (let select (block '(
          (let core table6)
          (let core (PersistableRepr (block '(
            (let projectCoreType (TypeOf core))
            (let core (OrderedSqlProject core '((SqlProjectItem projectCoreType '"key" (lambda '(row) (block '(
              (let res (Member row '"key"))
              (return res)
            )))) (SqlProjectItem projectCoreType '"subkey" (lambda '(row) (block '(
              (let res '((Int32 '"1")))
              (return res)
            )))) (SqlProjectItem projectCoreType '"value" (lambda '(row) (block '(
              (let res (Member row '"value"))
              (return res)
            )))))))
            (return core)
          ))))
          (return core)
        )))
        (return select)
      ))) '"a") '((RemoveSystemMembers table7) '"b") '('Inner '"a" '"b" '('"a" '"key") '('"b" '"key") '()) '()))
      (let core (PersistableRepr (block '(
        (let projectCoreType (TypeOf core))
        (let core (OrderedSqlProject core '((SqlProjectItem projectCoreType '"a.key" (lambda '(row) (block '(
          (let res (SqlColumn row '"key" '"a"))
          (return res)
        )))) (SqlProjectItem projectCoreType '"a.subkey" (lambda '(row) (block '(
          (let res (SqlColumn row '"subkey" '"a"))
          (return res)
        )))) (SqlProjectItem projectCoreType '"b.value" (lambda '(row) (block '(
          (let res (SqlColumn row '"value" '"b"))
          (return res)
        )))))))
        (return core)
      ))))
      (return core)
    )))
    (let select (Sort select (Bool 'true) (lambda '(row) (PersistableRepr (SqlColumn row '"key" '"a")))))
    (return select)
  )))
  (let world (block '(
    (let result_sink (DataSink 'result))
    (let world (Write! world result_sink (Key) output '('('type) '('autoref) '('columns '('"a.key" '"a.subkey" '"b.value")))))
    (return (Commit! world result_sink))
  )))
  (return world)
)))
(let world (block '(
  (let world (CommitAll! world))
  (return world)
)))
(return world)
)
