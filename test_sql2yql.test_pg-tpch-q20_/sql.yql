(
(let world (Configure! world (DataSource 'config) 'OrderedColumns))
(let read0 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"supplier"))) (Void) '()))
(let world (Left! read0))
(let read1 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"nation"))) (Void) '()))
(let world (Left! read1))
(let read2 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"partsupp"))) (Void) '()))
(let world (Left! read2))
(let read3 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"part"))) (Void) '()))
(let world (Left! read3))
(let read4 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"lineitem"))) (Void) '()))
(let world (Left! read4))
(let output (PgSelect '('('set_items '((PgSetItem '('('result '((PgResultItem '"s_name" (Void) (lambda '() (PgColumnRef '"s_name"))) (PgResultItem '"s_address" (Void) (lambda '() (PgColumnRef '"s_address"))))) '('from '('((Right! read0) '"supplier" '()) '((Right! read1) '"nation" '()))) '('join_ops '('() '())) '('where (PgWhere (Void) (lambda '() (PgAnd (PgAnd (PgSubLink 'any (Void) (Void) (lambda '(value) (PgOp '"=" (PgColumnRef '"s_suppkey") value)) (lambda '() (PgSelect '('('set_items '((PgSetItem '('('result '((PgResultItem '"ps_suppkey" (Void) (lambda '() (PgColumnRef '"ps_suppkey"))))) '('from '('((Right! read2) '"partsupp" '()))) '('join_ops '('())) '('where (PgWhere (Void) (lambda '() (PgAnd (PgSubLink 'any (Void) (Void) (lambda '(value) (PgOp '"=" (PgColumnRef '"ps_partkey") value)) (lambda '() (PgSelect '('('set_items '((PgSetItem '('('result '((PgResultItem '"p_partkey" (Void) (lambda '() (PgColumnRef '"p_partkey"))))) '('from '('((Right! read3) '"part" '()))) '('join_ops '('())) '('where (PgWhere (Void) (lambda '() (PgLike (PgColumnRef '"p_name") (PgConst '"forest%" (PgType 'text)))))))))) '('set_ops '('push)))))) (PgOp '">" (PgCast (PgColumnRef '"ps_availqty") (PgType '"numeric")) (PgSubLink 'expr (Void) (Void) (Void) (lambda '() (PgSelect '('('set_items '((PgSetItem '('('result '((PgResultItem '"column0" (Void) (lambda '() (PgOp '"*" (PgCast (PgConst '0.5 (PgType 'numeric)) (PgType '"numeric")) (PgAgg '"sum" '() (PgColumnRef '"l_quantity"))))))) '('from '('((Right! read4) '"lineitem" '()))) '('join_ops '('())) '('where (PgWhere (Void) (lambda '() (PgAnd (PgAnd (PgAnd (PgOp '"=" (PgColumnRef '"l_partkey") (PgColumnRef '"ps_partkey")) (PgOp '"=" (PgColumnRef '"l_suppkey") (PgColumnRef '"ps_suppkey"))) (PgOp '">=" (PgColumnRef '"l_shipdate") (PgCast (PgConst '"1994-01-01" (PgType 'text)) (PgType '"date")))) (PgOp '"<" (PgColumnRef '"l_shipdate") (PgOp '"+" (PgCast (PgConst '"1994-01-01" (PgType 'text)) (PgType '"date")) (PgCast (PgConst '"1" (PgType 'text)) (PgType '"interval") (PgCall 'intervaltypmodin '() (PgArray (PgConst '"4" (PgType 'cstring))))))))))))))) '('set_ops '('push))))))))))))))) '('set_ops '('push)))))) (PgOp '"=" (PgColumnRef '"s_nationkey") (PgColumnRef '"n_nationkey"))) (PgOp '"=" (PgColumnRef '"n_name") (PgConst '"CANADA" (PgType 'text))))))) '('sort '((PgSort (Void) (lambda '() (PgColumnRef '"s_name")) 'asc))))))) '('set_ops '('push)))))
(let result_sink (DataSink 'result))
(let world (Write! world result_sink (Key) output '('('type) '('autoref))))
(let world (Commit! world result_sink))
(let world (CommitAll! world))
(return world)
)
