(
(let world (Configure! world (DataSource 'config) 'OrderedColumns))
(let read0 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"catalog_sales"))) (Void) '()))
(let world (Left! read0))
(let read1 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"customer_demographics"))) (Void) '()))
(let world (Left! read1))
(let read2 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"customer_demographics"))) (Void) '()))
(let world (Left! read2))
(let read3 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"customer"))) (Void) '()))
(let world (Left! read3))
(let read4 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"customer_address"))) (Void) '()))
(let world (Left! read4))
(let read5 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"date_dim"))) (Void) '()))
(let world (Left! read5))
(let read6 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"item"))) (Void) '()))
(let world (Left! read6))
(let output (PgSelect '('('set_items '((PgSetItem '('('result '((PgResultItem '"i_item_id" (Void) (lambda '() (PgColumnRef '"i_item_id"))) (PgResultItem '"ca_country" (Void) (lambda '() (PgColumnRef '"ca_country"))) (PgResultItem '"ca_state" (Void) (lambda '() (PgColumnRef '"ca_state"))) (PgResultItem '"ca_county" (Void) (lambda '() (PgColumnRef '"ca_county"))) (PgResultItem '"agg1" (Void) (lambda '() (PgAgg '"avg" '() (PgCast (PgColumnRef '"cs_quantity") (PgType '"numeric") (PgCall 'numerictypmodin '() (PgArray (PgConst '"12" (PgType 'cstring)) (PgConst '"2" (PgType 'cstring)))))))) (PgResultItem '"agg2" (Void) (lambda '() (PgAgg '"avg" '() (PgCast (PgColumnRef '"cs_list_price") (PgType '"numeric") (PgCall 'numerictypmodin '() (PgArray (PgConst '"12" (PgType 'cstring)) (PgConst '"2" (PgType 'cstring)))))))) (PgResultItem '"agg3" (Void) (lambda '() (PgAgg '"avg" '() (PgCast (PgColumnRef '"cs_coupon_amt") (PgType '"numeric") (PgCall 'numerictypmodin '() (PgArray (PgConst '"12" (PgType 'cstring)) (PgConst '"2" (PgType 'cstring)))))))) (PgResultItem '"agg4" (Void) (lambda '() (PgAgg '"avg" '() (PgCast (PgColumnRef '"cs_sales_price") (PgType '"numeric") (PgCall 'numerictypmodin '() (PgArray (PgConst '"12" (PgType 'cstring)) (PgConst '"2" (PgType 'cstring)))))))) (PgResultItem '"agg5" (Void) (lambda '() (PgAgg '"avg" '() (PgCast (PgColumnRef '"cs_net_profit") (PgType '"numeric") (PgCall 'numerictypmodin '() (PgArray (PgConst '"12" (PgType 'cstring)) (PgConst '"2" (PgType 'cstring)))))))) (PgResultItem '"agg6" (Void) (lambda '() (PgAgg '"avg" '() (PgCast (PgColumnRef '"c_birth_year") (PgType '"numeric") (PgCall 'numerictypmodin '() (PgArray (PgConst '"12" (PgType 'cstring)) (PgConst '"2" (PgType 'cstring)))))))) (PgResultItem '"agg7" (Void) (lambda '() (PgAgg '"avg" '() (PgCast (PgColumnRef '"cd1" '"cd_dep_count") (PgType '"numeric") (PgCall 'numerictypmodin '() (PgArray (PgConst '"12" (PgType 'cstring)) (PgConst '"2" (PgType 'cstring)))))))))) '('from '('((Right! read0) '"catalog_sales" '()) '((Right! read1) '"cd1" '()) '((Right! read2) '"cd2" '()) '((Right! read3) '"customer" '()) '((Right! read4) '"customer_address" '()) '((Right! read5) '"date_dim" '()) '((Right! read6) '"item" '()))) '('join_ops '('() '() '() '() '() '() '())) '('where (PgWhere (Void) (lambda '() (PgAnd (PgAnd (PgAnd (PgAnd (PgAnd (PgAnd (PgAnd (PgAnd (PgAnd (PgAnd (PgOp '"=" (PgColumnRef '"cs_sold_date_sk") (PgColumnRef '"d_date_sk")) (PgOp '"=" (PgColumnRef '"cs_item_sk") (PgColumnRef '"i_item_sk"))) (PgOp '"=" (PgColumnRef '"cs_bill_cdemo_sk") (PgColumnRef '"cd1" '"cd_demo_sk"))) (PgOp '"=" (PgColumnRef '"cs_bill_customer_sk") (PgColumnRef '"c_customer_sk"))) (PgOp '"=" (PgColumnRef '"cd1" '"cd_gender") (PgConst '"M" (PgType 'text)))) (PgOp '"=" (PgColumnRef '"cd1" '"cd_education_status") (PgConst '"College" (PgType 'text)))) (PgOp '"=" (PgColumnRef '"c_current_cdemo_sk") (PgColumnRef '"cd2" '"cd_demo_sk"))) (PgOp '"=" (PgColumnRef '"c_current_addr_sk") (PgColumnRef '"ca_address_sk"))) (PgIn (PgColumnRef '"c_birth_month") (AsList (PgConst '9 (PgType 'int4)) (PgConst '5 (PgType 'int4)) (PgConst '12 (PgType 'int4)) (PgConst '4 (PgType 'int4)) (PgConst '1 (PgType 'int4)) (PgConst '10 (PgType 'int4))))) (PgOp '"=" (PgColumnRef '"d_year") (PgConst '2001 (PgType 'int4)))) (PgIn (PgColumnRef '"ca_state") (AsList (PgConst '"ND" (PgType 'text)) (PgConst '"WI" (PgType 'text)) (PgConst '"AL" (PgType 'text)) (PgConst '"NC" (PgType 'text)) (PgConst '"OK" (PgType 'text)) (PgConst '"MS" (PgType 'text)) (PgConst '"TN" (PgType 'text)))))))) '('group_by '((PgGroup (Void) (lambda '() (PgGroupingSet 'rollup '((PgColumnRef '"i_item_id") (PgColumnRef '"ca_country") (PgColumnRef '"ca_state") (PgColumnRef '"ca_county"))))))) '('sort '((PgSort (Void) (lambda '() (PgColumnRef '"ca_country")) 'asc) (PgSort (Void) (lambda '() (PgColumnRef '"ca_state")) 'asc) (PgSort (Void) (lambda '() (PgColumnRef '"ca_county")) 'asc) (PgSort (Void) (lambda '() (PgColumnRef '"i_item_id")) 'asc))))))) '('set_ops '('push)) '('limit (PgConst '100 (PgType 'int4))))))
(let result_sink (DataSink 'result))
(let world (Write! world result_sink (Key) output '('('type) '('autoref))))
(let world (Commit! world result_sink))
(let world (CommitAll! world))
(return world)
)
