(
(let world (Configure! world (DataSource 'config) 'OrderedColumns))
(let read0 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"lineitem"))) (Void) '()))
(let world (Left! read0))
(let output (PgSelect '('('set_items '((PgSetItem '('('result '((PgResultItem '"l_returnflag" (Void) (lambda '() (PgColumnRef '"l_returnflag"))) (PgResultItem '"l_linestatus" (Void) (lambda '() (PgColumnRef '"l_linestatus"))) (PgResultItem '"sum_qty" (Void) (lambda '() (PgAgg '"sum" '() (PgColumnRef '"l_quantity")))) (PgResultItem '"sum_base_price" (Void) (lambda '() (PgAgg '"sum" '() (PgColumnRef '"l_extendedprice")))) (PgResultItem '"sum_disc_price" (Void) (lambda '() (PgAgg '"sum" '() (PgOp '"*" (PgColumnRef '"l_extendedprice") (PgOp '"-" (PgCast (PgConst '1 (PgType 'int4)) (PgType '"numeric")) (PgColumnRef '"l_discount")))))) (PgResultItem '"sum_charge" (Void) (lambda '() (PgAgg '"sum" '() (PgOp '"*" (PgOp '"*" (PgColumnRef '"l_extendedprice") (PgOp '"-" (PgCast (PgConst '1 (PgType 'int4)) (PgType '"numeric")) (PgColumnRef '"l_discount"))) (PgOp '"+" (PgCast (PgConst '1 (PgType 'int4)) (PgType '"numeric")) (PgColumnRef '"l_tax")))))) (PgResultItem '"avg_qty" (Void) (lambda '() (PgAgg '"avg" '() (PgColumnRef '"l_quantity")))) (PgResultItem '"avg_price" (Void) (lambda '() (PgAgg '"avg" '() (PgColumnRef '"l_extendedprice")))) (PgResultItem '"avg_disc" (Void) (lambda '() (PgAgg '"avg" '() (PgColumnRef '"l_discount")))) (PgResultItem '"count_order" (Void) (lambda '() (PgAgg '"count" '()))))) '('from '('((Right! read0) '"lineitem" '()))) '('join_ops '('())) '('where (PgWhere (Void) (lambda '() (PgOp '"<=" (PgColumnRef '"l_shipdate") (PgOp '"-" (PgCast (PgConst '"1998-12-01" (PgType 'text)) (PgType '"date")) (PgCast (PgConst '"90" (PgType 'text)) (PgType '"interval") (PgCall 'intervaltypmodin '() (PgArray (PgConst '"8" (PgType 'cstring)))))))))) '('group_by '((PgGroup (Void) (lambda '() (PgColumnRef '"l_returnflag"))) (PgGroup (Void) (lambda '() (PgColumnRef '"l_linestatus"))))) '('sort '((PgSort (Void) (lambda '() (PgColumnRef '"l_returnflag")) 'asc) (PgSort (Void) (lambda '() (PgColumnRef '"l_linestatus")) 'asc))))))) '('set_ops '('push)))))
(let result_sink (DataSink 'result))
(let world (Write! world result_sink (Key) output '('('type) '('autoref))))
(let world (Commit! world result_sink))
(let world (CommitAll! world))
(return world)
)
