(
(let world (Configure! world (DataSource 'config) 'OrderedColumns))
(let read0 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"partsupp"))) (Void) '()))
(let world (Left! read0))
(let read1 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"part"))) (Void) '()))
(let world (Left! read1))
(let read2 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"supplier"))) (Void) '()))
(let world (Left! read2))
(let output (PgSelect '('('set_items '((PgSetItem '('('result '((PgResultItem '"p_brand" (Void) (lambda '() (PgColumnRef '"p_brand"))) (PgResultItem '"p_type" (Void) (lambda '() (PgColumnRef '"p_type"))) (PgResultItem '"p_size" (Void) (lambda '() (PgColumnRef '"p_size"))) (PgResultItem '"supplier_cnt" (Void) (lambda '() (PgAgg '"count" '('('distinct)) (PgColumnRef '"ps_suppkey")))))) '('from '('((Right! read0) '"partsupp" '()) '((Right! read1) '"part" '()))) '('join_ops '('() '())) '('where (PgWhere (Void) (lambda '() (PgAnd (PgAnd (PgAnd (PgAnd (PgOp '"=" (PgColumnRef '"p_partkey") (PgColumnRef '"ps_partkey")) (PgOp '"<>" (PgColumnRef '"p_brand") (PgConst '"Brand#45" (PgType 'text)))) (PgNot (PgLike (PgColumnRef '"p_type") (PgConst '"MEDIUM POLISHED%" (PgType 'text))))) (PgIn (PgColumnRef '"p_size") (AsList (PgConst '49 (PgType 'int4)) (PgConst '14 (PgType 'int4)) (PgConst '23 (PgType 'int4)) (PgConst '45 (PgType 'int4)) (PgConst '19 (PgType 'int4)) (PgConst '3 (PgType 'int4)) (PgConst '36 (PgType 'int4)) (PgConst '9 (PgType 'int4))))) (PgNot (PgSubLink 'any (Void) (Void) (lambda '(value) (PgOp '"=" (PgColumnRef '"ps_suppkey") value)) (lambda '() (PgSelect '('('set_items '((PgSetItem '('('result '((PgResultItem '"s_suppkey" (Void) (lambda '() (PgColumnRef '"s_suppkey"))))) '('from '('((Right! read2) '"supplier" '()))) '('join_ops '('())) '('where (PgWhere (Void) (lambda '() (PgLike (PgColumnRef '"s_comment") (PgConst '"%Customer%Complaints%" (PgType 'text)))))))))) '('set_ops '('push))))))))))) '('group_by '((PgGroup (Void) (lambda '() (PgColumnRef '"p_brand"))) (PgGroup (Void) (lambda '() (PgColumnRef '"p_type"))) (PgGroup (Void) (lambda '() (PgColumnRef '"p_size"))))) '('sort '((PgSort (Void) (lambda '() (PgColumnRef '"supplier_cnt")) 'desc) (PgSort (Void) (lambda '() (PgColumnRef '"p_brand")) 'asc) (PgSort (Void) (lambda '() (PgColumnRef '"p_type")) 'asc) (PgSort (Void) (lambda '() (PgColumnRef '"p_size")) 'asc))))))) '('set_ops '('push)))))
(let result_sink (DataSink 'result))
(let world (Write! world result_sink (Key) output '('('type) '('autoref))))
(let world (Commit! world result_sink))
(let world (CommitAll! world))
(return world)
)
