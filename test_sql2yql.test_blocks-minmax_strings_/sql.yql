(
(import aggregate_module '"/lib/yql/aggregate.yql")
(import window_module '"/lib/yql/window.yql")
(import core_module '"/lib/yql/core.yql")
(let world (Configure! world (DataSource '"config") '"UseBlocks"))
(let world (Configure! world (DataSource '"yt" '"$all") '"Attr" '"usepartitionsbykeysforfinalagg" '"false"))
(let world (Configure! world (DataSource '"dq" '"$all") '"Attr" '"enabledqreplicate" '"1"))
(let world (block '(
  (let x (Read! world (DataSource '"yt" '"plato") (MrTableConcat (Key '('table (String '"Input")))) (Void) '()))
  (let table0 (Right! x))
  (let output (block '(
    (let select (block '(
      (let core table0)
      (let core (AssumeColumnOrderPartial (Aggregate core '('"key") '('('Max0 (AggApply 'max (ListItemType (TypeOf core)) (lambda '(row) (PersistableRepr (Member row '"s"))))) '('Min0 (AggApply 'min (ListItemType (TypeOf core)) (lambda '(row) (PersistableRepr (Member row '"s"))))) '('Min1 (AggApply 'min (ListItemType (TypeOf core)) (lambda '(row) (PersistableRepr (Member row '"s_opt"))))) '('Max1 (AggApply 'max (ListItemType (TypeOf core)) (lambda '(row) (PersistableRepr (Member row '"s_opt"))))) '('Max2 (AggApply 'max (ListItemType (ListType (StructMemberType (ListItemType (TypeOf core)) '"utf"))) (lambda '(row) (PersistableRepr row))) '"utf") '('Min2 (AggApply 'min (ListItemType (ListType (StructMemberType (ListItemType (TypeOf core)) '"utf"))) (lambda '(row) (PersistableRepr row))) '"utf") '('Min3 (AggApply 'min (ListItemType (ListType (StructMemberType (ListItemType (TypeOf core)) '"s_opt"))) (lambda '(row) (PersistableRepr row))) '"s_opt") '('Max3 (AggApply 'max (ListItemType (ListType (StructMemberType (ListItemType (TypeOf core)) '"s_opt"))) (lambda '(row) (PersistableRepr row))) '"s_opt")) '()) '('"key")))
      (let core (PersistableRepr (block '(
        (let projectCoreType (TypeOf core))
        (let core (SqlProject core '((SqlProjectItem projectCoreType '"key" (lambda '(row) (block '(
          (let res (Member row '"key"))
          (return res)
        )))) (SqlProjectItem projectCoreType '"maxs" (lambda '(row) (block '(
          (let res (Member row 'Max0))
          (return res)
        )))) (SqlProjectItem projectCoreType '"mins" (lambda '(row) (block '(
          (let res (Member row 'Min0))
          (return res)
        )))) (SqlProjectItem projectCoreType '"mins_opt" (lambda '(row) (block '(
          (let res (Member row 'Min1))
          (return res)
        )))) (SqlProjectItem projectCoreType '"maxs_opt" (lambda '(row) (block '(
          (let res (Member row 'Max1))
          (return res)
        )))) (SqlProjectItem projectCoreType '"dmaxs" (lambda '(row) (block '(
          (let res (Member row 'Max2))
          (return res)
        )))) (SqlProjectItem projectCoreType '"dmins" (lambda '(row) (block '(
          (let res (Member row 'Min2))
          (return res)
        )))) (SqlProjectItem projectCoreType '"dmins_opt" (lambda '(row) (block '(
          (let res (Member row 'Min3))
          (return res)
        )))) (SqlProjectItem projectCoreType '"dmaxs_opt" (lambda '(row) (block '(
          (let res (Member row 'Max3))
          (return res)
        )))))))
        (return core)
      ))))
      (return core)
    )))
    (let select (Sort select (Bool 'true) (lambda '(row) (PersistableRepr (Member row '"key")))))
    (return select)
  )))
  (let world (block '(
    (let result_sink (DataSink 'result))
    (let world (Write! world result_sink (Key) output '('('type) '('autoref) '('columns '('"key" '"maxs" '"mins" '"mins_opt" '"maxs_opt" '"dmaxs" '"dmins" '"dmins_opt" '"dmaxs_opt")))))
    (return (Commit! world result_sink))
  )))
  (return world)
)))
(let world (block '(
  (let world (CommitAll! world))
  (return world)
)))
(return world)
)
