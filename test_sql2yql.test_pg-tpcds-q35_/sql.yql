(
(let world (Configure! world (DataSource 'config) 'OrderedColumns))
(let read0 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"customer"))) (Void) '()))
(let world (Left! read0))
(let read1 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"customer_address"))) (Void) '()))
(let world (Left! read1))
(let read2 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"customer_demographics"))) (Void) '()))
(let world (Left! read2))
(let read3 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"store_sales"))) (Void) '()))
(let world (Left! read3))
(let read4 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"date_dim"))) (Void) '()))
(let world (Left! read4))
(let read5 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"web_sales"))) (Void) '()))
(let world (Left! read5))
(let read6 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"date_dim"))) (Void) '()))
(let world (Left! read6))
(let read7 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"catalog_sales"))) (Void) '()))
(let world (Left! read7))
(let read8 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"date_dim"))) (Void) '()))
(let world (Left! read8))
(let output (PgSelect '('('set_items '((PgSetItem '('('result '((PgResultItem '"ca_state" (Void) (lambda '() (PgColumnRef '"ca_state"))) (PgResultItem '"cd_gender" (Void) (lambda '() (PgColumnRef '"cd_gender"))) (PgResultItem '"cd_marital_status" (Void) (lambda '() (PgColumnRef '"cd_marital_status"))) (PgResultItem '"cd_dep_count" (Void) (lambda '() (PgColumnRef '"cd_dep_count"))) (PgResultItem '"cnt1" (Void) (lambda '() (PgAgg '"count" '()))) (PgResultItem '"column0" (Void) (lambda '() (PgAgg '"avg" '() (PgColumnRef '"cd_dep_count")))) (PgResultItem '"column1" (Void) (lambda '() (PgAgg '"max" '() (PgColumnRef '"cd_dep_count")))) (PgResultItem '"column2" (Void) (lambda '() (PgAgg '"sum" '() (PgColumnRef '"cd_dep_count")))) (PgResultItem '"cd_dep_employed_count" (Void) (lambda '() (PgColumnRef '"cd_dep_employed_count"))) (PgResultItem '"cnt2" (Void) (lambda '() (PgAgg '"count" '()))) (PgResultItem '"column3" (Void) (lambda '() (PgAgg '"avg" '() (PgColumnRef '"cd_dep_employed_count")))) (PgResultItem '"column4" (Void) (lambda '() (PgAgg '"max" '() (PgColumnRef '"cd_dep_employed_count")))) (PgResultItem '"column5" (Void) (lambda '() (PgAgg '"sum" '() (PgColumnRef '"cd_dep_employed_count")))) (PgResultItem '"cd_dep_college_count" (Void) (lambda '() (PgColumnRef '"cd_dep_college_count"))) (PgResultItem '"cnt3" (Void) (lambda '() (PgAgg '"count" '()))) (PgResultItem '"column6" (Void) (lambda '() (PgAgg '"avg" '() (PgColumnRef '"cd_dep_college_count")))) (PgResultItem '"column7" (Void) (lambda '() (PgAgg '"max" '() (PgColumnRef '"cd_dep_college_count")))) (PgResultItem '"column8" (Void) (lambda '() (PgAgg '"sum" '() (PgColumnRef '"cd_dep_college_count")))))) '('from '('((Right! read0) '"c" '()) '((Right! read1) '"ca" '()) '((Right! read2) '"customer_demographics" '()))) '('join_ops '('() '() '())) '('where (PgWhere (Void) (lambda '() (PgAnd (PgAnd (PgAnd (PgOp '"=" (PgColumnRef '"c" '"c_current_addr_sk") (PgColumnRef '"ca" '"ca_address_sk")) (PgOp '"=" (PgColumnRef '"cd_demo_sk") (PgColumnRef '"c" '"c_current_cdemo_sk"))) (PgSubLink 'exists (Void) (Void) (Void) (lambda '() (PgSelect '('('set_items '((PgSetItem '('('result '((PgResultItem '"" (Void) (lambda '() (PgStar))))) '('from '('((Right! read3) '"store_sales" '()) '((Right! read4) '"date_dim" '()))) '('join_ops '('() '())) '('where (PgWhere (Void) (lambda '() (PgAnd (PgAnd (PgAnd (PgOp '"=" (PgColumnRef '"c" '"c_customer_sk") (PgColumnRef '"ss_customer_sk")) (PgOp '"=" (PgColumnRef '"ss_sold_date_sk") (PgColumnRef '"d_date_sk"))) (PgOp '"=" (PgColumnRef '"d_year") (PgConst '1999 (PgType 'int4)))) (PgOp '"<" (PgColumnRef '"d_qoy") (PgConst '4 (PgType 'int4))))))))))) '('set_ops '('push))))))) (PgOr (PgSubLink 'exists (Void) (Void) (Void) (lambda '() (PgSelect '('('set_items '((PgSetItem '('('result '((PgResultItem '"" (Void) (lambda '() (PgStar))))) '('from '('((Right! read5) '"web_sales" '()) '((Right! read6) '"date_dim" '()))) '('join_ops '('() '())) '('where (PgWhere (Void) (lambda '() (PgAnd (PgAnd (PgAnd (PgOp '"=" (PgColumnRef '"c" '"c_customer_sk") (PgColumnRef '"ws_bill_customer_sk")) (PgOp '"=" (PgColumnRef '"ws_sold_date_sk") (PgColumnRef '"d_date_sk"))) (PgOp '"=" (PgColumnRef '"d_year") (PgConst '1999 (PgType 'int4)))) (PgOp '"<" (PgColumnRef '"d_qoy") (PgConst '4 (PgType 'int4))))))))))) '('set_ops '('push)))))) (PgSubLink 'exists (Void) (Void) (Void) (lambda '() (PgSelect '('('set_items '((PgSetItem '('('result '((PgResultItem '"" (Void) (lambda '() (PgStar))))) '('from '('((Right! read7) '"catalog_sales" '()) '((Right! read8) '"date_dim" '()))) '('join_ops '('() '())) '('where (PgWhere (Void) (lambda '() (PgAnd (PgAnd (PgAnd (PgOp '"=" (PgColumnRef '"c" '"c_customer_sk") (PgColumnRef '"cs_ship_customer_sk")) (PgOp '"=" (PgColumnRef '"cs_sold_date_sk") (PgColumnRef '"d_date_sk"))) (PgOp '"=" (PgColumnRef '"d_year") (PgConst '1999 (PgType 'int4)))) (PgOp '"<" (PgColumnRef '"d_qoy") (PgConst '4 (PgType 'int4))))))))))) '('set_ops '('push))))))))))) '('group_by '((PgGroup (Void) (lambda '() (PgColumnRef '"ca_state"))) (PgGroup (Void) (lambda '() (PgColumnRef '"cd_gender"))) (PgGroup (Void) (lambda '() (PgColumnRef '"cd_marital_status"))) (PgGroup (Void) (lambda '() (PgColumnRef '"cd_dep_count"))) (PgGroup (Void) (lambda '() (PgColumnRef '"cd_dep_employed_count"))) (PgGroup (Void) (lambda '() (PgColumnRef '"cd_dep_college_count"))))) '('sort '((PgSort (Void) (lambda '() (PgColumnRef '"ca_state")) 'asc) (PgSort (Void) (lambda '() (PgColumnRef '"cd_gender")) 'asc) (PgSort (Void) (lambda '() (PgColumnRef '"cd_marital_status")) 'asc) (PgSort (Void) (lambda '() (PgColumnRef '"cd_dep_count")) 'asc) (PgSort (Void) (lambda '() (PgColumnRef '"cd_dep_employed_count")) 'asc) (PgSort (Void) (lambda '() (PgColumnRef '"cd_dep_college_count")) 'asc))))))) '('set_ops '('push)) '('limit (PgConst '100 (PgType 'int4))))))
(let result_sink (DataSink 'result))
(let world (Write! world result_sink (Key) output '('('type) '('autoref))))
(let world (Commit! world result_sink))
(let world (CommitAll! world))
(return world)
)
