(
(let world (Configure! world (DataSource 'config) 'OrderedColumns))
(let output (PgSelect '('('set_items '((PgSetItem '('('result '((PgResultItem '"column0" (Void) (lambda '() (PgIn (PgConst '1 (PgType 'int4)) (AsList (PgConst '2 (PgType 'int4)))))) (PgResultItem '"column1" (Void) (lambda '() (PgIn (PgConst '1 (PgType 'int4)) (AsList (PgConst '2 (PgType 'int4)) (PgConst '1 (PgType 'int4)))))) (PgResultItem '"column2" (Void) (lambda '() (PgIn (PgConst '1 (PgType 'int4)) (AsList (PgConst '1 (PgType 'int4)))))) (PgResultItem '"column3" (Void) (lambda '() (PgIn (PgCast (PgCast (Null) (PgType 'text)) (PgType '"int4")) (AsList (PgConst '1 (PgType 'int4)))))) (PgResultItem '"column4" (Void) (lambda '() (PgIn (PgConst '1 (PgType 'int4)) (AsList (PgCast (PgCast (Null) (PgType 'text)) (PgType '"int4")))))) (PgResultItem '"column5" (Void) (lambda '() (PgIn (PgCast (Null) (PgType 'text)) (AsList (PgCast (Null) (PgType 'text)))))))))))) '('set_ops '('push)))))
(let result_sink (DataSink 'result))
(let world (Write! world result_sink (Key) output '('('type) '('autoref))))
(let world (Commit! world result_sink))
(let world (CommitAll! world))
(return world)
)
