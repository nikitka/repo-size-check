(
(let world (Configure! world (DataSource 'config) 'OrderedColumns))
(let output (PgSelect '('('set_items '((PgSetItem '('('result '((PgResultItem '"x" (Void) (lambda '() (PgColumnRef '"x"))) (PgResultItem '"y" (Void) (lambda '() (PgColumnRef '"y"))) (PgResultItem '"column0" (Void) (lambda '() (PgGrouping (PgColumnRef '"x")))) (PgResultItem '"column1" (Void) (lambda '() (PgGrouping (PgColumnRef '"y")))) (PgResultItem '"column2" (Void) (lambda '() (PgGrouping (PgColumnRef '"x") (PgColumnRef '"y")))))) '('from '('((PgSelect '('('set_items '((PgSetItem '('('values '('column0 'column1) (AsList '((PgConst '1 (PgType 'int4)) (PgConst '2 (PgType 'int4))) '((PgConst '1 (PgType 'int4)) (PgConst '2 (PgType 'int4))) '((PgConst '2 (PgType 'int4)) (PgConst '3 (PgType 'int4))) '((PgConst '2 (PgType 'int4)) (PgConst '2 (PgType 'int4))))))))) '('set_ops '('push)))) '"a" '('"x" '"y")))) '('join_ops '('())) '('group_by '((PgGroup (Void) (lambda '() (PgGroupingSet 'cube '((PgColumnRef '"x") (PgColumnRef '"y"))))))) '('sort '((PgSort (Void) (lambda '() (PgColumnRef '"x")) 'asc) (PgSort (Void) (lambda '() (PgColumnRef '"y")) 'asc))))))) '('set_ops '('push)))))
(let result_sink (DataSink 'result))
(let world (Write! world result_sink (Key) output '('('type) '('autoref))))
(let world (Commit! world result_sink))
(let world (CommitAll! world))
(return world)
)
