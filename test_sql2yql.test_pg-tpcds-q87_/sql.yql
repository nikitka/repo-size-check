(
(let world (Configure! world (DataSource 'config) 'OrderedColumns))
(let read0 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"store_sales"))) (Void) '()))
(let world (Left! read0))
(let read1 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"date_dim"))) (Void) '()))
(let world (Left! read1))
(let read2 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"customer"))) (Void) '()))
(let world (Left! read2))
(let read3 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"catalog_sales"))) (Void) '()))
(let world (Left! read3))
(let read4 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"date_dim"))) (Void) '()))
(let world (Left! read4))
(let read5 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"customer"))) (Void) '()))
(let world (Left! read5))
(let read6 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"web_sales"))) (Void) '()))
(let world (Left! read6))
(let read7 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"date_dim"))) (Void) '()))
(let world (Left! read7))
(let read8 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"customer"))) (Void) '()))
(let world (Left! read8))
(let output (PgSelect '('('set_items '((PgSetItem '('('result '((PgResultItem '"column0" (Void) (lambda '() (PgAgg '"count" '()))))) '('from '('((PgSelect '('('set_items '((PgSetItem '('('result '((PgResultItem '"c_last_name" (Void) (lambda '() (PgColumnRef '"c_last_name"))) (PgResultItem '"c_first_name" (Void) (lambda '() (PgColumnRef '"c_first_name"))) (PgResultItem '"d_date" (Void) (lambda '() (PgColumnRef '"d_date"))))) '('from '('((Right! read0) '"store_sales" '()) '((Right! read1) '"date_dim" '()) '((Right! read2) '"customer" '()))) '('join_ops '('() '() '())) '('where (PgWhere (Void) (lambda '() (PgAnd (PgAnd (PgOp '"=" (PgColumnRef '"store_sales" '"ss_sold_date_sk") (PgColumnRef '"date_dim" '"d_date_sk")) (PgOp '"=" (PgColumnRef '"store_sales" '"ss_customer_sk") (PgColumnRef '"customer" '"c_customer_sk"))) (PgBetween (PgColumnRef '"d_month_seq") (PgConst '1212 (PgType 'int4)) (PgOp '"+" (PgConst '1212 (PgType 'int4)) (PgConst '11 (PgType 'int4)))))))) '('distinct_all))) (PgSetItem '('('result '((PgResultItem '"c_last_name" (Void) (lambda '() (PgColumnRef '"c_last_name"))) (PgResultItem '"c_first_name" (Void) (lambda '() (PgColumnRef '"c_first_name"))) (PgResultItem '"d_date" (Void) (lambda '() (PgColumnRef '"d_date"))))) '('from '('((Right! read3) '"catalog_sales" '()) '((Right! read4) '"date_dim" '()) '((Right! read5) '"customer" '()))) '('join_ops '('() '() '())) '('where (PgWhere (Void) (lambda '() (PgAnd (PgAnd (PgOp '"=" (PgColumnRef '"catalog_sales" '"cs_sold_date_sk") (PgColumnRef '"date_dim" '"d_date_sk")) (PgOp '"=" (PgColumnRef '"catalog_sales" '"cs_bill_customer_sk") (PgColumnRef '"customer" '"c_customer_sk"))) (PgBetween (PgColumnRef '"d_month_seq") (PgConst '1212 (PgType 'int4)) (PgOp '"+" (PgConst '1212 (PgType 'int4)) (PgConst '11 (PgType 'int4)))))))) '('distinct_all))) (PgSetItem '('('result '((PgResultItem '"c_last_name" (Void) (lambda '() (PgColumnRef '"c_last_name"))) (PgResultItem '"c_first_name" (Void) (lambda '() (PgColumnRef '"c_first_name"))) (PgResultItem '"d_date" (Void) (lambda '() (PgColumnRef '"d_date"))))) '('from '('((Right! read6) '"web_sales" '()) '((Right! read7) '"date_dim" '()) '((Right! read8) '"customer" '()))) '('join_ops '('() '() '())) '('where (PgWhere (Void) (lambda '() (PgAnd (PgAnd (PgOp '"=" (PgColumnRef '"web_sales" '"ws_sold_date_sk") (PgColumnRef '"date_dim" '"d_date_sk")) (PgOp '"=" (PgColumnRef '"web_sales" '"ws_bill_customer_sk") (PgColumnRef '"customer" '"c_customer_sk"))) (PgBetween (PgColumnRef '"d_month_seq") (PgConst '1212 (PgType 'int4)) (PgOp '"+" (PgConst '1212 (PgType 'int4)) (PgConst '11 (PgType 'int4)))))))) '('distinct_all))))) '('set_ops '('push 'push 'except 'push 'except)))) '"cool_cust" '()))) '('join_ops '('())))))) '('set_ops '('push)))))
(let result_sink (DataSink 'result))
(let world (Write! world result_sink (Key) output '('('type) '('autoref))))
(let world (Commit! world result_sink))
(let world (CommitAll! world))
(return world)
)
