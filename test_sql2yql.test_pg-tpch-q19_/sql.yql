(
(let world (Configure! world (DataSource 'config) 'OrderedColumns))
(let read0 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"lineitem"))) (Void) '()))
(let world (Left! read0))
(let read1 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"part"))) (Void) '()))
(let world (Left! read1))
(let output (PgSelect '('('set_items '((PgSetItem '('('result '((PgResultItem '"revenue" (Void) (lambda '() (PgAgg '"sum" '() (PgOp '"*" (PgColumnRef '"l_extendedprice") (PgOp '"-" (PgCast (PgConst '1 (PgType 'int4)) (PgType '"numeric")) (PgColumnRef '"l_discount")))))))) '('from '('((Right! read0) '"lineitem" '()) '((Right! read1) '"part" '()))) '('join_ops '('() '())) '('where (PgWhere (Void) (lambda '() (PgOr (PgOr (PgAnd (PgAnd (PgAnd (PgAnd (PgAnd (PgAnd (PgAnd (PgOp '"=" (PgColumnRef '"p_partkey") (PgColumnRef '"l_partkey")) (PgOp '"=" (PgColumnRef '"p_brand") (PgConst '"Brand#12" (PgType 'text)))) (PgIn (PgColumnRef '"p_container") (AsList (PgConst '"SM CASE" (PgType 'text)) (PgConst '"SM BOX" (PgType 'text)) (PgConst '"SM PACK" (PgType 'text)) (PgConst '"SM PKG" (PgType 'text))))) (PgOp '">=" (PgColumnRef '"l_quantity") (PgCast (PgConst '1 (PgType 'int4)) (PgType '"numeric")))) (PgOp '"<=" (PgColumnRef '"l_quantity") (PgCast (PgOp '"+" (PgConst '1 (PgType 'int4)) (PgConst '10 (PgType 'int4))) (PgType '"numeric")))) (PgBetween (PgColumnRef '"p_size") (PgConst '1 (PgType 'int4)) (PgConst '5 (PgType 'int4)))) (PgIn (PgColumnRef '"l_shipmode") (AsList (PgConst '"AIR" (PgType 'text)) (PgConst '"AIR REG" (PgType 'text))))) (PgOp '"=" (PgColumnRef '"l_shipinstruct") (PgConst '"DELIVER IN PERSON" (PgType 'text)))) (PgAnd (PgAnd (PgAnd (PgAnd (PgAnd (PgAnd (PgAnd (PgOp '"=" (PgColumnRef '"p_partkey") (PgColumnRef '"l_partkey")) (PgOp '"=" (PgColumnRef '"p_brand") (PgConst '"Brand#23" (PgType 'text)))) (PgIn (PgColumnRef '"p_container") (AsList (PgConst '"MED BAG" (PgType 'text)) (PgConst '"MED BOX" (PgType 'text)) (PgConst '"MED PKG" (PgType 'text)) (PgConst '"MED PACK" (PgType 'text))))) (PgOp '">=" (PgColumnRef '"l_quantity") (PgCast (PgConst '10 (PgType 'int4)) (PgType '"numeric")))) (PgOp '"<=" (PgColumnRef '"l_quantity") (PgCast (PgOp '"+" (PgConst '10 (PgType 'int4)) (PgConst '10 (PgType 'int4))) (PgType '"numeric")))) (PgBetween (PgColumnRef '"p_size") (PgConst '1 (PgType 'int4)) (PgConst '10 (PgType 'int4)))) (PgIn (PgColumnRef '"l_shipmode") (AsList (PgConst '"AIR" (PgType 'text)) (PgConst '"AIR REG" (PgType 'text))))) (PgOp '"=" (PgColumnRef '"l_shipinstruct") (PgConst '"DELIVER IN PERSON" (PgType 'text))))) (PgAnd (PgAnd (PgAnd (PgAnd (PgAnd (PgAnd (PgAnd (PgOp '"=" (PgColumnRef '"p_partkey") (PgColumnRef '"l_partkey")) (PgOp '"=" (PgColumnRef '"p_brand") (PgConst '"Brand#34" (PgType 'text)))) (PgIn (PgColumnRef '"p_container") (AsList (PgConst '"LG CASE" (PgType 'text)) (PgConst '"LG BOX" (PgType 'text)) (PgConst '"LG PACK" (PgType 'text)) (PgConst '"LG PKG" (PgType 'text))))) (PgOp '">=" (PgColumnRef '"l_quantity") (PgCast (PgConst '20 (PgType 'int4)) (PgType '"numeric")))) (PgOp '"<=" (PgColumnRef '"l_quantity") (PgCast (PgOp '"+" (PgConst '20 (PgType 'int4)) (PgConst '10 (PgType 'int4))) (PgType '"numeric")))) (PgBetween (PgColumnRef '"p_size") (PgConst '1 (PgType 'int4)) (PgConst '15 (PgType 'int4)))) (PgIn (PgColumnRef '"l_shipmode") (AsList (PgConst '"AIR" (PgType 'text)) (PgConst '"AIR REG" (PgType 'text))))) (PgOp '"=" (PgColumnRef '"l_shipinstruct") (PgConst '"DELIVER IN PERSON" (PgType 'text)))))))))))) '('set_ops '('push)))))
(let result_sink (DataSink 'result))
(let world (Write! world result_sink (Key) output '('('type) '('autoref))))
(let world (Commit! world result_sink))
(let world (CommitAll! world))
(return world)
)
