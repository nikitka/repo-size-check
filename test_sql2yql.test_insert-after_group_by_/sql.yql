(
(import aggregate_module '"/lib/yql/aggregate.yql")
(import window_module '"/lib/yql/window.yql")
(import core_module '"/lib/yql/core.yql")
(let world (block '(
  (let x (Read! world (DataSource '"yt" '"plato") (MrTableConcat (Key '('table (String '"Input")))) (Void) '()))
  (let table1 (Right! x))
  (let values (OrderedMap (block '(
    (let select (block '(
      (let core table1)
      (let core (AssumeColumnOrderPartial (Aggregate core '('"key" '"subkey") '('('Max0 (Apply (bind aggregate_module '"max_traits_factory") (TypeOf core) (lambda '(row) (PersistableRepr (Member row '"value")))))) '()) '('"key" '"subkey")))
      (let core (PersistableRepr (block '(
        (let projectCoreType (TypeOf core))
        (let core (SqlProject core '((SqlProjectItem projectCoreType '"key" (lambda '(row) (block '(
          (let res (Member row '"key"))
          (return res)
        )))) (SqlProjectItem projectCoreType '"subkey" (lambda '(row) (block '(
          (let res (Member row '"subkey"))
          (return res)
        )))) (SqlProjectItem projectCoreType '"column2" (lambda '(row) (block '(
          (let res (Member row 'Max0))
          (return res)
        )))))))
        (return core)
      ))))
      (return core)
    )))
    (let select (Sort select (Bool 'true) (lambda '(row) (PersistableRepr (Member row '"key")))))
    (return select)
  )) (lambda '(row) (AsStruct '('"key" (Member row '"key")) '('"subkey" (Member row '"subkey")) '('"value" (Member row '"column2"))))))
  (let world (block '(
    (let sink (DataSink '"yt" '"plato"))
    (let world (Write! world sink (Key '('table (String '"Output"))) values '('('mode 'append))))
    (return world)
  )))
  (return world)
)))
(let world (block '(
  (let world (CommitAll! world))
  (return world)
)))
(return world)
)
