(
(let world (Configure! world (DataSource 'config) 'OrderedColumns))
(let output (PgSelect '('('set_items '((PgSetItem '('('result '((PgResultItem '"column0" (Void) (lambda '() (PgAgg '"string_agg" '('('distinct)) (PgColumnRef '"x") (PgColumnRef '"y")))))) '('from '('((PgSelect '('('set_items '((PgSetItem '('('values '('column0 'column1) (AsList '((PgConst '"a" (PgType 'text)) (PgConst '"," (PgType 'text))) '((PgConst '"b" (PgType 'text)) (PgConst '":" (PgType 'text))) '((PgConst '"a" (PgType 'text)) (PgConst '"," (PgType 'text))))))))) '('set_ops '('push)))) '"a" '('"x" '"y")))) '('join_ops '('())))))) '('set_ops '('push)))))
(let result_sink (DataSink 'result))
(let world (Write! world result_sink (Key) output '('('type) '('autoref))))
(let world (Commit! world result_sink))
(let output (PgSelect '('('set_items '((PgSetItem '('('result '((PgResultItem '"column0" (Void) (lambda '() (PgAgg '"count" '('('distinct)) (PgColumnRef '"x")))))) '('from '('((PgSelect '('('set_items '((PgSetItem '('('values '('column0) (AsList '((PgConst '1 (PgType 'int4))) '((PgConst '2 (PgType 'int4))) '((PgConst '1 (PgType 'int4))) '((PgConst '3 (PgType 'int4))) '((PgConst '2 (PgType 'int4))) '((PgConst '1 (PgType 'int4))))))))) '('set_ops '('push)))) '"a" '('"x")))) '('join_ops '('())))))) '('set_ops '('push)))))
(let result_sink (DataSink 'result))
(let world (Write! world result_sink (Key) output '('('type) '('autoref))))
(let world (Commit! world result_sink))
(let world (CommitAll! world))
(return world)
)
