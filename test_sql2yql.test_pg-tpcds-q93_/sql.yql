(
(let world (Configure! world (DataSource 'config) 'OrderedColumns))
(let read0 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"store_sales"))) (Void) '()))
(let world (Left! read0))
(let read1 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"store_returns"))) (Void) '()))
(let world (Left! read1))
(let read2 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"reason"))) (Void) '()))
(let world (Left! read2))
(let output (PgSelect '('('set_items '((PgSetItem '('('result '((PgResultItem '"ss_customer_sk" (Void) (lambda '() (PgColumnRef '"ss_customer_sk"))) (PgResultItem '"sumsales" (Void) (lambda '() (PgAgg '"sum" '() (PgColumnRef '"act_sales")))))) '('from '('((PgSelect '('('set_items '((PgSetItem '('('result '((PgResultItem '"ss_item_sk" (Void) (lambda '() (PgColumnRef '"ss_item_sk"))) (PgResultItem '"ss_ticket_number" (Void) (lambda '() (PgColumnRef '"ss_ticket_number"))) (PgResultItem '"ss_customer_sk" (Void) (lambda '() (PgColumnRef '"ss_customer_sk"))) (PgResultItem '"act_sales" (Void) (lambda '() (If (Coalesce (FromPg (ToPg (Exists (PgColumnRef '"sr_return_quantity")))) (Bool 'false)) (PgOp '"*" (PgCast (PgOp '"-" (PgColumnRef '"ss_quantity") (PgColumnRef '"sr_return_quantity")) (PgType '"numeric")) (PgColumnRef '"ss_sales_price")) (PgOp '"*" (PgCast (PgColumnRef '"ss_quantity") (PgType '"numeric")) (PgColumnRef '"ss_sales_price"))))))) '('from '('((Right! read0) '"store_sales" '()) '((Right! read1) '"store_returns" '()) '((Right! read2) '"reason" '()))) '('join_ops '('('('left (PgWhere (Void) (lambda '() (PgAnd (PgOp '"=" (PgColumnRef '"sr_item_sk") (PgColumnRef '"ss_item_sk")) (PgOp '"=" (PgColumnRef '"sr_ticket_number") (PgColumnRef '"ss_ticket_number"))))))) '())) '('where (PgWhere (Void) (lambda '() (PgAnd (PgOp '"=" (PgColumnRef '"sr_reason_sk") (PgColumnRef '"r_reason_sk")) (PgOp '"=" (PgColumnRef '"r_reason_desc") (PgConst '"Did not like the warranty" (PgType 'text))))))))))) '('set_ops '('push)))) '"t" '()))) '('join_ops '('())) '('group_by '((PgGroup (Void) (lambda '() (PgColumnRef '"ss_customer_sk"))))) '('sort '((PgSort (Void) (lambda '() (PgColumnRef '"sumsales")) 'asc) (PgSort (Void) (lambda '() (PgColumnRef '"ss_customer_sk")) 'asc))))))) '('set_ops '('push)) '('limit (PgConst '100 (PgType 'int4))))))
(let result_sink (DataSink 'result))
(let world (Write! world result_sink (Key) output '('('type) '('autoref))))
(let world (Commit! world result_sink))
(let world (CommitAll! world))
(return world)
)
