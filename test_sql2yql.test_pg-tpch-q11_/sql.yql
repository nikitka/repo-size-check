(
(let world (Configure! world (DataSource 'config) 'OrderedColumns))
(let world (Configure! world (DataSource 'dq '$all) 'Attr '"enabledqreplicate" '"1"))
(let read0 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"partsupp"))) (Void) '()))
(let world (Left! read0))
(let read1 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"supplier"))) (Void) '()))
(let world (Left! read1))
(let read2 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"nation"))) (Void) '()))
(let world (Left! read2))
(let read3 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"partsupp"))) (Void) '()))
(let world (Left! read3))
(let read4 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"supplier"))) (Void) '()))
(let world (Left! read4))
(let read5 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"nation"))) (Void) '()))
(let world (Left! read5))
(let output (PgSelect '('('set_items '((PgSetItem '('('result '((PgResultItem '"ps_partkey" (Void) (lambda '() (PgColumnRef '"ps_partkey"))) (PgResultItem '"value" (Void) (lambda '() (PgAgg '"sum" '() (PgOp '"*" (PgColumnRef '"ps_supplycost") (PgCast (PgColumnRef '"ps_availqty") (PgType '"numeric")))))))) '('from '('((Right! read0) '"partsupp" '()) '((Right! read1) '"supplier" '()) '((Right! read2) '"nation" '()))) '('join_ops '('() '() '())) '('where (PgWhere (Void) (lambda '() (PgAnd (PgAnd (PgOp '"=" (PgColumnRef '"ps_suppkey") (PgColumnRef '"s_suppkey")) (PgOp '"=" (PgColumnRef '"s_nationkey") (PgColumnRef '"n_nationkey"))) (PgOp '"=" (PgColumnRef '"n_name") (PgConst '"GERMANY" (PgType 'text))))))) '('group_by '((PgGroup (Void) (lambda '() (PgColumnRef '"ps_partkey"))))) '('having (PgWhere (Void) (lambda '() (PgOp '">" (PgAgg '"sum" '() (PgOp '"*" (PgColumnRef '"ps_supplycost") (PgCast (PgColumnRef '"ps_availqty") (PgType '"numeric")))) (PgSubLink 'expr (Void) (Void) (Void) (lambda '() (PgSelect '('('set_items '((PgSetItem '('('result '((PgResultItem '"column0" (Void) (lambda '() (PgOp '"*" (PgAgg '"sum" '() (PgOp '"*" (PgColumnRef '"ps_supplycost") (PgCast (PgColumnRef '"ps_availqty") (PgType '"numeric")))) (PgCast (PgConst '0.0001 (PgType 'float8)) (PgType '"numeric"))))))) '('from '('((Right! read3) '"partsupp" '()) '((Right! read4) '"supplier" '()) '((Right! read5) '"nation" '()))) '('join_ops '('() '() '())) '('where (PgWhere (Void) (lambda '() (PgAnd (PgAnd (PgOp '"=" (PgColumnRef '"ps_suppkey") (PgColumnRef '"s_suppkey")) (PgOp '"=" (PgColumnRef '"s_nationkey") (PgColumnRef '"n_nationkey"))) (PgOp '"=" (PgColumnRef '"n_name") (PgConst '"GERMANY" (PgType 'text))))))))))) '('set_ops '('push)))))))))) '('sort '((PgSort (Void) (lambda '() (PgColumnRef '"value")) 'desc))))))) '('set_ops '('push)))))
(let result_sink (DataSink 'result))
(let world (Write! world result_sink (Key) output '('('type) '('autoref))))
(let world (Commit! world result_sink))
(let world (CommitAll! world))
(return world)
)
