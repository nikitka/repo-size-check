(
(import aggregate_module '"/lib/yql/aggregate.yql")
(import window_module '"/lib/yql/window.yql")
(import core_module '"/lib/yql/core.yql")
(let world (block '(
  (let x (Read! world (DataSource '"rtmr" '"plato") (Key '('table (String '"Input"))) (Void) '()))
  (let world (Left! x))
  (let table1 (Right! x))
  (let values (block '(
    (let select (block '(
      (let core table1)
      (let core (AssumeColumnOrderPartial (Aggregate core '() '('('Sum0 (Apply (bind aggregate_module '"sum_traits_factory") (TypeOf core) (lambda '(row) (PersistableRepr (SafeCast (Member row '"value") (DataType 'Uint64))))))) '('('hopping (HoppingTraits (ListItemType (TypeOf core)) (lambda '(row) (SafeCast (Member row '"subkey") (DataType 'Timestamp))) (Interval '10000000) (Interval '30000000) (Interval '300000000) 'true 'v1)))) '()))
      (let core (PersistableRepr (block '(
        (let projectCoreType (TypeOf core))
        (let core (SqlProject core '((SqlProjectItem projectCoreType '"time" (lambda '(row) (block '(
          (let res (Sub (Member row '_yql_time) (Interval '30000000)))
          (return res)
        )))) (SqlProjectItem projectCoreType '"sum" (lambda '(row) (block '(
          (let res (Member row 'Sum0))
          (return res)
        )))))))
        (return core)
      ))))
      (return core)
    )))
    (return select)
  )))
  (let world (block '(
    (let sink (DataSink '"rtmr" '"plato"))
    (let world (Write! world sink (Key '('table (String '"Output"))) values '('('mode 'append))))
    (return world)
  )))
  (return world)
)))
(let world (block '(
  (let world (CommitAll! world))
  (return world)
)))
(return world)
)
