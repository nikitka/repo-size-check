(
(let world (Configure! world (DataSource 'config) 'OrderedColumns))
(let read0 (Read! world (DataSource '"yt" '"plato") (Key '('table (String '"InputC"))) (Void) '()))
(let world (Left! read0))
(let output (PgSelect '('('set_items '((PgSetItem '('('result '((PgResultItem '"id" (Void) (lambda '() (PgColumnRef '"id"))) (PgResultItem '"CodeGen_FullTime" (Void) (lambda '() (PgColumnRef '"CodeGen_FullTime"))) (PgResultItem '"Quoted" (Void) (lambda '() (PgColumnRef '"CodeGen_FullTime"))) (PgResultItem '"column0" (Void) (lambda '() (PgOp '"||" (PgColumnRef '"CodeGen_FullTime") (PgConst '"x" (PgType 'text))))) (PgResultItem '"column1" (Void) (lambda '() (PgOp '"||" (PgColumnRef '"CodeGen_FullTime") (PgConst '"x" (PgType 'text))))) (PgResultItem '"column2" (Void) (lambda '() (PgOp '"||" (PgColumnRef '"CodeGen_FullTime") (PgConst '"x" (PgType 'text))))))) '('from '('((Right! read0) '"InputC" '()))) '('join_ops '('())))))) '('set_ops '('push)) '('limit (PgConst '100 (PgType 'int4))))))
(let result_sink (DataSink 'result))
(let world (Write! world result_sink (Key) output '('('type) '('autoref))))
(let world (Commit! world result_sink))
(let world (CommitAll! world))
(return world)
)
